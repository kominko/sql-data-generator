USE [PRISYM_Data]
GO

--[TRANSLATION_SIZE]
IF (EXISTS (SELECT * FROM INFORMATION_SCHEMA.VIEWS WHERE TABLE_NAME = 'TRANSLATION_SIZE'))
BEGIN
    DROP VIEW TRANSLATION_SIZE;
END
GO

CREATE VIEW [dbo].[TRANSLATION_SIZE]
AS
SELECT     TOP (100) PERCENT H.TRANSLATION_ID, H.DESCRIPTION, H.MAPSEC_VERSION AS VERSION
FROM         dbo.TRANSLATION_HISTORY AS H INNER JOIN
                      dbo.TRANSLATION_WORKING AS W ON H.MAPSEC_ID = W.MAPSEC_ID AND H.MAPSEC_VERSION = W.MAPSEC_CURRENTVERSION
WHERE     (H.CATEGORY = 'SIZE')
ORDER BY H.DESCRIPTION
GO

--[TRANSLATION_SIDE]
IF (EXISTS (SELECT * FROM INFORMATION_SCHEMA.VIEWS WHERE TABLE_NAME = 'TRANSLATION_SIDE'))
BEGIN
    DROP VIEW TRANSLATION_SIDE;
END
GO

CREATE VIEW [dbo].[TRANSLATION_SIDE]
AS
SELECT     TOP (100) PERCENT H.TRANSLATION_ID, H.DESCRIPTION, H.MAPSEC_VERSION AS VERSION
FROM         dbo.TRANSLATION_HISTORY AS H INNER JOIN
                      dbo.TRANSLATION_WORKING AS W ON H.MAPSEC_ID = W.MAPSEC_ID AND H.MAPSEC_VERSION = W.MAPSEC_CURRENTVERSION
WHERE     (H.CATEGORY = 'SIDE')
ORDER BY H.DESCRIPTION
GO

--[TRANSLATION_SERIAL]
IF (EXISTS (SELECT * FROM INFORMATION_SCHEMA.VIEWS WHERE TABLE_NAME = 'TRANSLATION_SERIAL'))
BEGIN
    DROP VIEW TRANSLATION_SERIAL;
END
GO

CREATE VIEW [dbo].[TRANSLATION_SERIAL]
AS
SELECT     TOP (100) PERCENT H.TRANSLATION_ID, H.DESCRIPTION, H.MAPSEC_VERSION AS VERSION
FROM         dbo.TRANSLATION_HISTORY AS H INNER JOIN
                      dbo.TRANSLATION_WORKING AS W ON H.MAPSEC_ID = W.MAPSEC_ID AND H.MAPSEC_VERSION = W.MAPSEC_CURRENTVERSION
WHERE     (H.CATEGORY = 'SERIAL')
ORDER BY H.DESCRIPTION
GO

--[TRANSLATION_SAMPLETRIAL]
IF (EXISTS (SELECT * FROM INFORMATION_SCHEMA.VIEWS WHERE TABLE_NAME = 'TRANSLATION_SAMPLETRIAL'))
BEGIN
    DROP VIEW TRANSLATION_SAMPLETRIAL;
END
GO

CREATE VIEW [dbo].TRANSLATION_SAMPLETRIAL
AS
SELECT     TOP (100) PERCENT H.TRANSLATION_ID, H.DESCRIPTION, H.MAPSEC_VERSION AS VERSION
FROM         dbo.TRANSLATION_HISTORY AS H INNER JOIN
                      dbo.TRANSLATION_WORKING AS W ON H.MAPSEC_ID = W.MAPSEC_ID AND H.MAPSEC_VERSION = W.MAPSEC_CURRENTVERSION
WHERE     (H.CATEGORY = 'SAMPLETRIAL')
ORDER BY H.DESCRIPTION
GO

--[TRANSLATION_LATEXSTMT]
IF (EXISTS (SELECT * FROM INFORMATION_SCHEMA.VIEWS WHERE TABLE_NAME = 'TRANSLATION_LATEXSTMT'))
BEGIN
    DROP VIEW TRANSLATION_LATEXSTMT;
END
GO

CREATE VIEW [dbo].TRANSLATION_LATEXSTMT
AS
SELECT     TOP (100) PERCENT H.TRANSLATION_ID, H.DESCRIPTION, H.MAPSEC_VERSION AS VERSION
FROM         dbo.TRANSLATION_HISTORY AS H INNER JOIN
                      dbo.TRANSLATION_WORKING AS W ON H.MAPSEC_ID = W.MAPSEC_ID AND H.MAPSEC_VERSION = W.MAPSEC_CURRENTVERSION
WHERE     (H.CATEGORY = 'LATEXSTMT')
ORDER BY H.DESCRIPTION
GO

--[TRANSLATION_LANGSTMT]
IF (EXISTS (SELECT * FROM INFORMATION_SCHEMA.VIEWS WHERE TABLE_NAME = 'TRANSLATION_LANGSTMT'))
BEGIN
    DROP VIEW TRANSLATION_LANGSTMT;
END
GO

CREATE VIEW [dbo].TRANSLATION_LANGSTMT
AS
SELECT     TOP (100) PERCENT H.TRANSLATION_ID, H.DESCRIPTION, H.MAPSEC_VERSION AS VERSION
FROM         dbo.TRANSLATION_HISTORY AS H INNER JOIN
                      dbo.TRANSLATION_WORKING AS W ON H.MAPSEC_ID = W.MAPSEC_ID AND H.MAPSEC_VERSION = W.MAPSEC_CURRENTVERSION
WHERE     (H.CATEGORY = 'LANGSTMT')
ORDER BY H.DESCRIPTION
GO

--[STATEMENT_PATENT]
IF (EXISTS (SELECT * FROM INFORMATION_SCHEMA.VIEWS WHERE TABLE_NAME = 'STATEMENT_PATENT'))
BEGIN
    DROP VIEW STATEMENT_PATENT;
END
GO

CREATE VIEW [dbo].STATEMENT_PATENT
AS
SELECT     TOP (100) PERCENT H.STATEMENT_ID, H.DESCRIPTION, H.MAPSEC_VERSION AS VERSION
FROM         dbo.STATEMENT_HISTORY AS H INNER JOIN
                      dbo.STATEMENT_WORKING AS W ON H.MAPSEC_ID = W.MAPSEC_ID AND H.MAPSEC_VERSION = W.MAPSEC_CURRENTVERSION
WHERE     (H.CATEGORY = 'PATENT')
ORDER BY H.DESCRIPTION
GO

--[STATEMENT_COMMONPHRASE]
IF (EXISTS (SELECT * FROM INFORMATION_SCHEMA.VIEWS WHERE TABLE_NAME = 'STATEMENT_COMMONPHRASE'))
BEGIN
    DROP VIEW STATEMENT_COMMONPHRASE;
END
GO

CREATE VIEW [dbo].STATEMENT_COMMONPHRASE
AS
SELECT     TOP (100) PERCENT H.STATEMENT_ID, H.DESCRIPTION, H.MAPSEC_VERSION AS VERSION
FROM         dbo.STATEMENT_HISTORY AS H INNER JOIN
                      dbo.STATEMENT_WORKING AS W ON H.MAPSEC_ID = W.MAPSEC_ID AND H.MAPSEC_VERSION = W.MAPSEC_CURRENTVERSION
WHERE     (H.CATEGORY = 'COMMONPHRASE')
ORDER BY H.DESCRIPTION
GO

--[STATEMENT_ADDRESS]
IF (EXISTS (SELECT * FROM INFORMATION_SCHEMA.VIEWS WHERE TABLE_NAME = 'STATEMENT_ADDRESS'))
BEGIN
    DROP VIEW STATEMENT_ADDRESS;
END
GO

CREATE VIEW [dbo].STATEMENT_ADDRESS
AS
SELECT     TOP (100) PERCENT H.STATEMENT_ID, H.DESCRIPTION, H.MAPSEC_VERSION AS VERSION
FROM         dbo.STATEMENT_HISTORY AS H INNER JOIN
                      dbo.STATEMENT_WORKING AS W ON H.MAPSEC_ID = W.MAPSEC_ID AND H.MAPSEC_VERSION = W.MAPSEC_CURRENTVERSION
WHERE     (H.CATEGORY = 'ADDRESS')
ORDER BY H.DESCRIPTION
GO

--[IMAGE_STERILE]
IF (EXISTS (SELECT * FROM INFORMATION_SCHEMA.VIEWS WHERE TABLE_NAME = 'IMAGE_STERILE'))
BEGIN
    DROP VIEW IMAGE_STERILE;
END
GO

CREATE VIEW [dbo].IMAGE_STERILE
AS
SELECT     TOP (100) PERCENT H.IMAGE_ID, H.DESCRIPTION, H.MAPSEC_VERSION AS VERSION
FROM         dbo.IMAGE_HISTORY AS H INNER JOIN
                      dbo.IMAGE_WORKING AS W ON H.MAPSEC_ID = W.MAPSEC_ID AND H.MAPSEC_VERSION = W.MAPSEC_CURRENTVERSION
WHERE     (H.CATEGORY = 'STERILE')
ORDER BY H.DESCRIPTION
GO

--[IMAGE_SINGLEUSE]
IF (EXISTS (SELECT * FROM INFORMATION_SCHEMA.VIEWS WHERE TABLE_NAME = 'IMAGE_SINGLEUSE'))
BEGIN
    DROP VIEW IMAGE_SINGLEUSE;
END
GO

CREATE VIEW [dbo].IMAGE_SINGLEUSE
AS
SELECT     TOP (100) PERCENT H.IMAGE_ID, H.DESCRIPTION, H.MAPSEC_VERSION AS VERSION
FROM         dbo.IMAGE_HISTORY AS H INNER JOIN
                      dbo.IMAGE_WORKING AS W ON H.MAPSEC_ID = W.MAPSEC_ID AND H.MAPSEC_VERSION = W.MAPSEC_CURRENTVERSION
WHERE     (H.CATEGORY = 'SINGLEUSE')
ORDER BY H.DESCRIPTION
GO

--[IMAGE_RX]
IF (EXISTS (SELECT * FROM INFORMATION_SCHEMA.VIEWS WHERE TABLE_NAME = 'IMAGE_RX'))
BEGIN
    DROP VIEW IMAGE_RX;
END
GO

CREATE VIEW [dbo].IMAGE_RX
AS
SELECT     TOP (100) PERCENT H.IMAGE_ID, H.DESCRIPTION, H.MAPSEC_VERSION AS VERSION
FROM         dbo.IMAGE_HISTORY AS H INNER JOIN
                      dbo.IMAGE_WORKING AS W ON H.MAPSEC_ID = W.MAPSEC_ID AND H.MAPSEC_VERSION = W.MAPSEC_CURRENTVERSION
WHERE     (H.CATEGORY = 'RX')
ORDER BY H.DESCRIPTION
GO

--[IMAGE_REGULATORY]
IF (EXISTS (SELECT * FROM INFORMATION_SCHEMA.VIEWS WHERE TABLE_NAME = 'IMAGE_REGULATORY'))
BEGIN
    DROP VIEW IMAGE_REGULATORY;
END
GO

CREATE VIEW [dbo].IMAGE_REGULATORY
AS
SELECT     TOP (100) PERCENT H.IMAGE_ID, H.DESCRIPTION, H.MAPSEC_VERSION AS VERSION
FROM         dbo.IMAGE_HISTORY AS H INNER JOIN
                      dbo.IMAGE_WORKING AS W ON H.MAPSEC_ID = W.MAPSEC_ID AND H.MAPSEC_VERSION = W.MAPSEC_CURRENTVERSION
WHERE     (H.CATEGORY = 'REGULATORY')
ORDER BY H.DESCRIPTION
GO

--[IMAGE_PRODIMAGE]
IF (EXISTS (SELECT * FROM INFORMATION_SCHEMA.VIEWS WHERE TABLE_NAME = 'IMAGE_PRODIMAGE'))
BEGIN
    DROP VIEW IMAGE_PRODIMAGE;
END
GO

CREATE VIEW [dbo].IMAGE_PRODIMAGE
AS
SELECT     TOP (100) PERCENT H.IMAGE_ID, H.DESCRIPTION, H.MAPSEC_VERSION AS VERSION
FROM         dbo.IMAGE_HISTORY AS H INNER JOIN
                      dbo.IMAGE_WORKING AS W ON H.MAPSEC_ID = W.MAPSEC_ID AND H.MAPSEC_VERSION = W.MAPSEC_CURRENTVERSION
WHERE     (H.CATEGORY = 'PRODIMAGE')
ORDER BY H.DESCRIPTION
GO

--[IMAGE_MFG]
IF (EXISTS (SELECT * FROM INFORMATION_SCHEMA.VIEWS WHERE TABLE_NAME = 'IMAGE_MFG'))
BEGIN
    DROP VIEW IMAGE_MFG;
END
GO

CREATE VIEW [dbo].IMAGE_MFG
AS
SELECT     TOP (100) PERCENT H.IMAGE_ID, H.DESCRIPTION, H.MAPSEC_VERSION AS VERSION
FROM         dbo.IMAGE_HISTORY AS H INNER JOIN
                      dbo.IMAGE_WORKING AS W ON H.MAPSEC_ID = W.MAPSEC_ID AND H.MAPSEC_VERSION = W.MAPSEC_CURRENTVERSION
WHERE     (H.CATEGORY = 'MFG')
ORDER BY H.DESCRIPTION
GO

--[IMAGE_LOGO]
IF (EXISTS (SELECT * FROM INFORMATION_SCHEMA.VIEWS WHERE TABLE_NAME = 'IMAGE_LOGO'))
BEGIN
    DROP VIEW IMAGE_LOGO;
END
GO

CREATE VIEW [dbo].IMAGE_LOGO
AS
SELECT     TOP (100) PERCENT H.IMAGE_ID, H.DESCRIPTION, H.MAPSEC_VERSION AS VERSION
FROM         dbo.IMAGE_HISTORY AS H INNER JOIN
                      dbo.IMAGE_WORKING AS W ON H.MAPSEC_ID = W.MAPSEC_ID AND H.MAPSEC_VERSION = W.MAPSEC_CURRENTVERSION
WHERE     (H.CATEGORY = 'LOGO')
ORDER BY H.DESCRIPTION
GO

--[IMAGE_LATEX]
IF (EXISTS (SELECT * FROM INFORMATION_SCHEMA.VIEWS WHERE TABLE_NAME = 'IMAGE_LATEX'))
BEGIN
    DROP VIEW IMAGE_LATEX;
END
GO

CREATE VIEW [dbo].IMAGE_LATEX
AS
SELECT     TOP (100) PERCENT H.IMAGE_ID, H.DESCRIPTION, H.MAPSEC_VERSION AS VERSION
FROM         dbo.IMAGE_HISTORY AS H INNER JOIN
                      dbo.IMAGE_WORKING AS W ON H.MAPSEC_ID = W.MAPSEC_ID AND H.MAPSEC_VERSION = W.MAPSEC_CURRENTVERSION
WHERE     (H.CATEGORY = 'LATEX')
ORDER BY H.DESCRIPTION
GO

--[IMAGE_KEEPDRY]
IF (EXISTS (SELECT * FROM INFORMATION_SCHEMA.VIEWS WHERE TABLE_NAME = 'IMAGE_KEEPDRY'))
BEGIN
    DROP VIEW IMAGE_KEEPDRY;
END
GO

CREATE VIEW [dbo].IMAGE_KEEPDRY
AS
SELECT     TOP (100) PERCENT H.IMAGE_ID, H.DESCRIPTION, H.MAPSEC_VERSION AS VERSION
FROM         dbo.IMAGE_HISTORY AS H INNER JOIN
                      dbo.IMAGE_WORKING AS W ON H.MAPSEC_ID = W.MAPSEC_ID AND H.MAPSEC_VERSION = W.MAPSEC_CURRENTVERSION
WHERE     (H.CATEGORY = 'KEEPDRY')
ORDER BY H.DESCRIPTION
GO

--[IMAGE_IFU]
IF (EXISTS (SELECT * FROM INFORMATION_SCHEMA.VIEWS WHERE TABLE_NAME = 'IMAGE_IFU'))
BEGIN
    DROP VIEW IMAGE_IFU;
END
GO

CREATE VIEW [dbo].IMAGE_IFU
AS
SELECT     TOP (100) PERCENT H.IMAGE_ID, H.DESCRIPTION, H.MAPSEC_VERSION AS VERSION
FROM         dbo.IMAGE_HISTORY AS H INNER JOIN
                      dbo.IMAGE_WORKING AS W ON H.MAPSEC_ID = W.MAPSEC_ID AND H.MAPSEC_VERSION = W.MAPSEC_CURRENTVERSION
WHERE     (H.CATEGORY = 'IFU')
ORDER BY H.DESCRIPTION
GO

--[IMAGE_DOM]
IF (EXISTS (SELECT * FROM INFORMATION_SCHEMA.VIEWS WHERE TABLE_NAME = 'IMAGE_DOM'))
BEGIN
    DROP VIEW IMAGE_DOM;
END
GO

CREATE VIEW [dbo].IMAGE_DOM
AS
SELECT     TOP (100) PERCENT H.IMAGE_ID, H.DESCRIPTION, H.MAPSEC_VERSION AS VERSION
FROM         dbo.IMAGE_HISTORY AS H INNER JOIN
                      dbo.IMAGE_WORKING AS W ON H.MAPSEC_ID = W.MAPSEC_ID AND H.MAPSEC_VERSION = W.MAPSEC_CURRENTVERSION
WHERE     (H.CATEGORY = 'DOM')
ORDER BY H.DESCRIPTION
GO

--[IMAGE_DARKSTORAGE]
IF (EXISTS (SELECT * FROM INFORMATION_SCHEMA.VIEWS WHERE TABLE_NAME = 'IMAGE_DARKSTORAGE'))
BEGIN
    DROP VIEW IMAGE_DARKSTORAGE;
END
GO

CREATE VIEW [dbo].IMAGE_DARKSTORAGE
AS
SELECT     TOP (100) PERCENT H.IMAGE_ID, H.DESCRIPTION, H.MAPSEC_VERSION AS VERSION
FROM         dbo.IMAGE_HISTORY AS H INNER JOIN
                      dbo.IMAGE_WORKING AS W ON H.MAPSEC_ID = W.MAPSEC_ID AND H.MAPSEC_VERSION = W.MAPSEC_CURRENTVERSION
WHERE     (H.CATEGORY = 'DARKSTORAGE')
ORDER BY H.DESCRIPTION
GO

--[IMAGE_COLOR]
IF (EXISTS (SELECT * FROM INFORMATION_SCHEMA.VIEWS WHERE TABLE_NAME = 'IMAGE_COLOR'))
BEGIN
    DROP VIEW IMAGE_COLOR;
END
GO

CREATE VIEW [dbo].IMAGE_COLOR
AS
SELECT     TOP (100) PERCENT H.IMAGE_ID, H.DESCRIPTION, H.MAPSEC_VERSION AS VERSION
FROM         dbo.IMAGE_HISTORY AS H INNER JOIN
                      dbo.IMAGE_WORKING AS W ON H.MAPSEC_ID = W.MAPSEC_ID AND H.MAPSEC_VERSION = W.MAPSEC_CURRENTVERSION
WHERE     (H.CATEGORY = 'COLOR')
ORDER BY H.DESCRIPTION
GO

--[IMAGE_CE]
IF (EXISTS (SELECT * FROM INFORMATION_SCHEMA.VIEWS WHERE TABLE_NAME = 'IMAGE_CE'))
BEGIN
    DROP VIEW IMAGE_CE;
END
GO

CREATE VIEW [dbo].IMAGE_CE
AS
SELECT     TOP (100) PERCENT H.IMAGE_ID, H.DESCRIPTION, H.MAPSEC_VERSION AS VERSION
FROM         dbo.IMAGE_HISTORY AS H INNER JOIN
                      dbo.IMAGE_WORKING AS W ON H.MAPSEC_ID = W.MAPSEC_ID AND H.MAPSEC_VERSION = W.MAPSEC_CURRENTVERSION
WHERE     (H.CATEGORY = 'CE')
ORDER BY H.DESCRIPTION
GO

--[COUNTRY_LOOKUP]
--TO MAKE LOOKUP SHOWS IN ORDER
IF (EXISTS (SELECT * FROM INFORMATION_SCHEMA.VIEWS WHERE TABLE_NAME = 'COUNTRY_LOOKUP'))
BEGIN
    DROP VIEW COUNTRY_LOOKUP;
END
GO

CREATE VIEW [dbo].COUNTRY_LOOKUP
AS
SELECT     TOP (100) PERCENT H.COUNTRY_ID, H.NAME, H.MAPSEC_VERSION AS VERSION
FROM         dbo.COUNTRY_HISTORY AS H INNER JOIN
                      dbo.COUNTRY_WORKING AS W ON H.MAPSEC_ID = W.MAPSEC_ID AND H.MAPSEC_VERSION = W.MAPSEC_CURRENTVERSION
ORDER BY H.NAME
GO