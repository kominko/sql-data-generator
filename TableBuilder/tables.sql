
-- PURCHASE_ORDER
IF (EXISTS (SELECT * 
                 FROM INFORMATION_SCHEMA.TABLES 
                 WHERE TABLE_NAME = 'PURCHASE_ORDER'))
BEGIN
    DROP TABLE PURCHASE_ORDER;
END
GO

CREATE TABLE [PURCHASE_ORDER]
(
[ORDER_NUMBER] [nvarchar](255) NOT NULL,
[VENDOR_NUMBER] [nvarchar](50) ,
[ITEM_NUMBER] [nvarchar](30) NOT NULL,
[ITEM_NUMBER_VERSION] [int] ,
[ITEM_QTY] [int] NOT NULL,
[ITEM_QTY_PRINTED] [int] NOT NULL,
[IMPORT_DATE] [datetime] ,
[ORDER_SORCE] [nvarchar](50) 
);
-- Primary Key
ALTER TABLE [PURCHASE_ORDER]
ADD CONSTRAINT PK_PURCHASE_ORDER PRIMARY KEY ([ORDER_NUMBER])
GO

-- Constraints


-- Foreign Keys



-- DESTINATION_ORDER
IF (EXISTS (SELECT * 
                 FROM INFORMATION_SCHEMA.TABLES 
                 WHERE TABLE_NAME = 'DESTINATION_ORDER'))
BEGIN
    DROP TABLE DESTINATION_ORDER;
END
GO

CREATE TABLE [DESTINATION_ORDER]
(
[ORDER_NUMBER] [nvarchar](255) NOT NULL,
[ITEM_NUMBER] [nvarchar](30) NOT NULL,
[COPIES] [int] NOT NULL,
[SHIP_TO_COUNTRY] [nvarchar](3) NOT NULL,
[LOT_NUMBER] [nvarchar](50) NOT NULL,
[EXPIRY_DATE] [datetime] NOT NULL,
[PRINTER_NAME] [nvarchar](255) NOT NULL,
[FORMAT_NAME] [nvarchar](255) NOT NULL,
[PRINT_ATTEMPT_DATE] [datetime] ,
[ERROR_MSG] [nvarchar](255) ,
[PRINT_STATUS] [int] 
);
-- Primary Key
ALTER TABLE [DESTINATION_ORDER]
ADD CONSTRAINT PK_DESTINATION_ORDER PRIMARY KEY ([ORDER_NUMBER])
GO

-- Constraints


-- Foreign Keys



-- WORK_ORDER
IF (EXISTS (SELECT * 
                 FROM INFORMATION_SCHEMA.TABLES 
                 WHERE TABLE_NAME = 'WORK_ORDER'))
BEGIN
    DROP TABLE WORK_ORDER;
END
GO

CREATE TABLE [WORK_ORDER]
(
[ORDER_NUMBER] [nvarchar](30) NOT NULL,
[NAME] [nvarchar](255) NOT NULL,
[ITEM_NUMBER] [int] ,
[ITEM_NUMBER_VERSION] [int] NOT NULL,
[ORDER_QUANTITY] [int] ,
[ORDER_QUANTITY_PRINTED] [nvarchar](50) ,
[LOT_NUMBER] [datetime] ,
[IMPORT_DATE] [nvarchar](50) ,
[ORDER_SOURCE] [datetime] ,
[DOM] [datetime] ,
[EXPIRY_DATE] [nvarchar](3) ,
[COO] [int] ,
[COO_VERSION] [nvarchar](50) 
);
-- Primary Key
ALTER TABLE [WORK_ORDER]
ADD CONSTRAINT PK_WORK_ORDER PRIMARY KEY ([ORDER_NUMBER])
GO

-- Constraints


-- Foreign Keys



-- WORK_ORDER_CHINA
IF (EXISTS (SELECT * 
                 FROM INFORMATION_SCHEMA.TABLES 
                 WHERE TABLE_NAME = 'WORK_ORDER_CHINA'))
BEGIN
    DROP TABLE WORK_ORDER_CHINA;
END
GO

CREATE TABLE [WORK_ORDER_CHINA]
(
[ORDER_NUMBER] [nvarchar](30) NOT NULL,
[NAME] [nvarchar](255) ,
[ITEM_NUMBER] [int] ,
[ITEM_NUMBER_VERSION] [int] ,
[ORDER_QUANTITY] [int] ,
[ORDER_QUANTITY_PRINTED] [nvarchar](50) NOT NULL,
[LOT_NUMBER] [datetime] ,
[IMPORT_DATE] [nvarchar](50) ,
[ORDER_SOURCE] [datetime] ,
[DOM] [datetime] ,
[EXPIRY_DATE] [nvarchar](3) ,
[COO] [int] ,
[COO_VERSION] [nvarchar](50) 
);
-- Primary Key
ALTER TABLE [WORK_ORDER_CHINA]
ADD CONSTRAINT PK_WORK_ORDER_CHINA PRIMARY KEY ([ORDER_NUMBER])
GO

-- Constraints


-- Foreign Keys



-- REASON
IF (EXISTS (SELECT * 
                 FROM INFORMATION_SCHEMA.TABLES 
                 WHERE TABLE_NAME = 'REASON'))
BEGIN
    DROP TABLE REASON;
END
GO

CREATE TABLE [REASON]
(
[REASON_ID] [nvarchar](10) NOT NULL,
[REASON_TEXT] [nvarchar](255) NOT NULL,
[CATEGORY] [nvarchar](255) NOT NULL
);
-- Primary Key
ALTER TABLE [REASON]
ADD CONSTRAINT PK_REASON PRIMARY KEY ([REASON_ID])
GO

-- Constraints


-- Foreign Keys



-- SUPPLIER
IF (EXISTS (SELECT * 
                 FROM INFORMATION_SCHEMA.TABLES 
                 WHERE TABLE_NAME = 'SUPPLIER'))
BEGIN
    DROP TABLE SUPPLIER;
END
GO

CREATE TABLE [SUPPLIER]
(
[SUPPLIER_ID] [nvarchar](30) NOT NULL,
[LIC] [nvarchar](50) ,
[COUNTRY_OF_ORIGIN] [nvarchar](3) 
);
-- Primary Key
ALTER TABLE [SUPPLIER]
ADD CONSTRAINT PK_SUPPLIER PRIMARY KEY ([SUPPLIER_ID])
GO

-- Constraints


-- Foreign Keys



-- IMAGE
IF (EXISTS (SELECT * 
                 FROM INFORMATION_SCHEMA.TABLES 
                 WHERE TABLE_NAME = 'IMAGE_HISTORY'))
BEGIN
    DROP TABLE IMAGE_HISTORY;
END
GO

IF (EXISTS (SELECT * 
                 FROM INFORMATION_SCHEMA.TABLES 
                 WHERE TABLE_NAME = 'IMAGE_WORKING'))
BEGIN
    DROP TABLE IMAGE_WORKING;
END
GO

IF (EXISTS (SELECT * 
                 FROM INFORMATION_SCHEMA.VIEWS
                 WHERE TABLE_NAME = 'IMAGE'))
BEGIN
    DROP VIEW IMAGE;
END
GO

IF (EXISTS (SELECT * 
                 FROM INFORMATION_SCHEMA.VIEWS
                 WHERE TABLE_NAME = 'IMAGE_CURRENT'))
BEGIN
    DROP VIEW IMAGE_CURRENT;
END
GO

CREATE TABLE [IMAGE_HISTORY]
(
[IMAGE_ID] [nvarchar](30) NOT NULL,
[DESCRIPTION] [nvarchar](255) NOT NULL,
[IMAGE_PATH] [nvarchar](255) NOT NULL,
[CATEGORY] [nvarchar](255) NOT NULL,
[MAPSEC_ID] [uniqueidentifier] NOT NULL,
[MAPSEC_VERSION] [int] NOT NULL,
[MAPSEC_VERSION_Enabled] [bit] NOT NULL,
[MAPSEC_DES_USERID] [nvarchar](64) NOT NULL,
[MAPSEC_DES_USERNAME] [nvarchar](100) NOT NULL,
[MAPSEC_DES_MACHINE] [nvarchar](100) NOT NULL,
[MAPSEC_DES_TIMEDATE] [datetime] NOT NULL,
[MAPSEC_DES_COMMENT] [nvarchar](255) NOT NULL,
[MAPSEC_PEND_USERID] [nvarchar](64) ,
[MAPSEC_PEND_USERNAME] [nvarchar](100) ,
[MAPSEC_PEND_MACHINE] [nvarchar](100) ,
[MAPSEC_PEND_TIMEDATE] [datetime] ,
[MAPSEC_PEND_COMMENT] [nvarchar](255) ,
[MAPSEC_APPRV_USERID] [nvarchar](64) ,
[MAPSEC_APPRV_USERNAME] [nvarchar](100) ,
[MAPSEC_APPRV_MACHINE] [nvarchar](100) ,
[MAPSEC_APPRV_TIMEDATE] [datetime] ,
[MAPSEC_APPRV_COMMENT] [nvarchar](255) 
);
-- Primary Key
ALTER TABLE [IMAGE_HISTORY]
ADD CONSTRAINT PK_IMAGE_HISTORY PRIMARY KEY ([MAPSEC_ID], [MAPSEC_VERSION])
GO

-- Constraints


-- Foreign Keys


CREATE UNIQUE INDEX IX_IMAGE_HISTORY_0 ON IMAGE_HISTORY (IMAGE_ID, MAPSEC_VERSION);
GO

ALTER TABLE IMAGE_HISTORY ADD CONSTRAINT CK_IX_IMAGE_HISTORY_0
 UNIQUE (IMAGE_ID, MAPSEC_VERSION)

GO

CREATE TABLE [IMAGE_WORKING]
(
[MAPSEC_ID] [uniqueidentifier] NOT NULL,
[MAPSEC_LIVEVERSION] [int] ,
[MAPSEC_CURRENTVERSION] [int] ,
[MAPSEC_ENABLED] [bit] 
);
-- Primary Key
ALTER TABLE [IMAGE_WORKING]
ADD CONSTRAINT PK_IMAGE_WORKING PRIMARY KEY ([MAPSEC_ID])
GO

-- Constraints


-- Foreign Keys


CREATE INDEX IX_IMAGE_WORKING_0 ON IMAGE_WORKING (MAPSEC_ID, MAPSEC_LIVEVERSION);
GO

GO

CREATE INDEX IX_IMAGE_WORKING_1 ON IMAGE_WORKING (MAPSEC_ID, MAPSEC_CURRENTVERSION);
GO

GO

CREATE VIEW IMAGE AS 
SELECT [IMAGE_HISTORY].[IMAGE_ID],
[IMAGE_HISTORY].[DESCRIPTION],
[IMAGE_HISTORY].[IMAGE_PATH],
[IMAGE_HISTORY].[CATEGORY],
[IMAGE_HISTORY].[MAPSEC_ID]
FROM IMAGE_HISTORY JOIN IMAGE_WORKING ON [IMAGE_HISTORY].[MAPSEC_ID] = [IMAGE_WORKING].[MAPSEC_ID] AND [IMAGE_HISTORY].[MAPSEC_VERSION] = [IMAGE_WORKING].[MAPSEC_LIVEVERSION]
WHERE [IMAGE_WORKING].[MAPSEC_ENABLED] = 1;
GO

CREATE VIEW IMAGE_CURRENT AS 
SELECT [IMAGE_HISTORY].[IMAGE_ID],
[IMAGE_HISTORY].[DESCRIPTION],
[IMAGE_HISTORY].[IMAGE_PATH],
[IMAGE_HISTORY].[CATEGORY],
[IMAGE_HISTORY].[MAPSEC_ID]
FROM IMAGE_HISTORY JOIN IMAGE_WORKING ON [IMAGE_HISTORY].[MAPSEC_ID] = [IMAGE_WORKING].[MAPSEC_ID] AND [IMAGE_HISTORY].[MAPSEC_VERSION] = [IMAGE_WORKING].[MAPSEC_CURRENTVERSION]
WHERE [IMAGE_WORKING].[MAPSEC_ENABLED] = 1;
GO


-- COUNTRY
IF (EXISTS (SELECT * 
                 FROM INFORMATION_SCHEMA.TABLES 
                 WHERE TABLE_NAME = 'COUNTRY_HISTORY'))
BEGIN
    DROP TABLE COUNTRY_HISTORY;
END
GO

IF (EXISTS (SELECT * 
                 FROM INFORMATION_SCHEMA.TABLES 
                 WHERE TABLE_NAME = 'COUNTRY_WORKING'))
BEGIN
    DROP TABLE COUNTRY_WORKING;
END
GO

IF (EXISTS (SELECT * 
                 FROM INFORMATION_SCHEMA.VIEWS
                 WHERE TABLE_NAME = 'COUNTRY'))
BEGIN
    DROP VIEW COUNTRY;
END
GO

IF (EXISTS (SELECT * 
                 FROM INFORMATION_SCHEMA.VIEWS
                 WHERE TABLE_NAME = 'COUNTRY_CURRENT'))
BEGIN
    DROP VIEW COUNTRY_CURRENT;
END
GO

CREATE TABLE [COUNTRY_HISTORY]
(
[COUNTRY_ID] [nvarchar](3) NOT NULL,
[NAME] [nvarchar](255) NOT NULL,
[MAPSEC_ID] [uniqueidentifier] NOT NULL,
[MAPSEC_VERSION] [int] NOT NULL,
[MAPSEC_VERSION_Enabled] [bit] NOT NULL,
[MAPSEC_DES_USERID] [nvarchar](64) NOT NULL,
[MAPSEC_DES_USERNAME] [nvarchar](100) NOT NULL,
[MAPSEC_DES_MACHINE] [nvarchar](100) NOT NULL,
[MAPSEC_DES_TIMEDATE] [datetime] NOT NULL,
[MAPSEC_DES_COMMENT] [nvarchar](255) NOT NULL,
[MAPSEC_PEND_USERID] [nvarchar](64) ,
[MAPSEC_PEND_USERNAME] [nvarchar](100) ,
[MAPSEC_PEND_MACHINE] [nvarchar](100) ,
[MAPSEC_PEND_TIMEDATE] [datetime] ,
[MAPSEC_PEND_COMMENT] [nvarchar](255) ,
[MAPSEC_APPRV_USERID] [nvarchar](64) ,
[MAPSEC_APPRV_USERNAME] [nvarchar](100) ,
[MAPSEC_APPRV_MACHINE] [nvarchar](100) ,
[MAPSEC_APPRV_TIMEDATE] [datetime] ,
[MAPSEC_APPRV_COMMENT] [nvarchar](255) 
);
-- Primary Key
ALTER TABLE [COUNTRY_HISTORY]
ADD CONSTRAINT PK_COUNTRY_HISTORY PRIMARY KEY ([MAPSEC_ID], [MAPSEC_VERSION])
GO

-- Constraints


-- Foreign Keys


CREATE UNIQUE INDEX IX_COUNTRY_HISTORY_0 ON COUNTRY_HISTORY (COUNTRY_ID, MAPSEC_VERSION);
GO

ALTER TABLE COUNTRY_HISTORY ADD CONSTRAINT CK_IX_COUNTRY_HISTORY_0
 UNIQUE (COUNTRY_ID, MAPSEC_VERSION)

GO

CREATE TABLE [COUNTRY_WORKING]
(
[MAPSEC_ID] [uniqueidentifier] NOT NULL,
[MAPSEC_LIVEVERSION] [int] ,
[MAPSEC_CURRENTVERSION] [int] ,
[MAPSEC_ENABLED] [bit] 
);
-- Primary Key
ALTER TABLE [COUNTRY_WORKING]
ADD CONSTRAINT PK_COUNTRY_WORKING PRIMARY KEY ([MAPSEC_ID])
GO

-- Constraints


-- Foreign Keys


CREATE INDEX IX_COUNTRY_WORKING_0 ON COUNTRY_WORKING (MAPSEC_ID, MAPSEC_LIVEVERSION);
GO

GO

CREATE INDEX IX_COUNTRY_WORKING_1 ON COUNTRY_WORKING (MAPSEC_ID, MAPSEC_CURRENTVERSION);
GO

GO

CREATE VIEW COUNTRY AS 
SELECT [COUNTRY_HISTORY].[COUNTRY_ID],
[COUNTRY_HISTORY].[NAME],
[COUNTRY_HISTORY].[MAPSEC_ID]
FROM COUNTRY_HISTORY JOIN COUNTRY_WORKING ON [COUNTRY_HISTORY].[MAPSEC_ID] = [COUNTRY_WORKING].[MAPSEC_ID] AND [COUNTRY_HISTORY].[MAPSEC_VERSION] = [COUNTRY_WORKING].[MAPSEC_LIVEVERSION]
WHERE [COUNTRY_WORKING].[MAPSEC_ENABLED] = 1;
GO

CREATE VIEW COUNTRY_CURRENT AS 
SELECT [COUNTRY_HISTORY].[COUNTRY_ID],
[COUNTRY_HISTORY].[NAME],
[COUNTRY_HISTORY].[MAPSEC_ID]
FROM COUNTRY_HISTORY JOIN COUNTRY_WORKING ON [COUNTRY_HISTORY].[MAPSEC_ID] = [COUNTRY_WORKING].[MAPSEC_ID] AND [COUNTRY_HISTORY].[MAPSEC_VERSION] = [COUNTRY_WORKING].[MAPSEC_CURRENTVERSION]
WHERE [COUNTRY_WORKING].[MAPSEC_ENABLED] = 1;
GO


-- STATEMENT
IF (EXISTS (SELECT * 
                 FROM INFORMATION_SCHEMA.TABLES 
                 WHERE TABLE_NAME = 'STATEMENT_HISTORY'))
BEGIN
    DROP TABLE STATEMENT_HISTORY;
END
GO

IF (EXISTS (SELECT * 
                 FROM INFORMATION_SCHEMA.TABLES 
                 WHERE TABLE_NAME = 'STATEMENT_WORKING'))
BEGIN
    DROP TABLE STATEMENT_WORKING;
END
GO

IF (EXISTS (SELECT * 
                 FROM INFORMATION_SCHEMA.VIEWS
                 WHERE TABLE_NAME = 'STATEMENT'))
BEGIN
    DROP VIEW STATEMENT;
END
GO

IF (EXISTS (SELECT * 
                 FROM INFORMATION_SCHEMA.VIEWS
                 WHERE TABLE_NAME = 'STATEMENT_CURRENT'))
BEGIN
    DROP VIEW STATEMENT_CURRENT;
END
GO

CREATE TABLE [STATEMENT_HISTORY]
(
[STATEMENT_ID] [nvarchar](30) NOT NULL,
[DESCRIPTION] [nvarchar](255) NOT NULL,
[CATEGORY] [nvarchar](255) NOT NULL,
[MAPSEC_ID] [uniqueidentifier] NOT NULL,
[MAPSEC_VERSION] [int] NOT NULL,
[MAPSEC_VERSION_Enabled] [bit] NOT NULL,
[MAPSEC_DES_USERID] [nvarchar](64) NOT NULL,
[MAPSEC_DES_USERNAME] [nvarchar](100) NOT NULL,
[MAPSEC_DES_MACHINE] [nvarchar](100) NOT NULL,
[MAPSEC_DES_TIMEDATE] [datetime] NOT NULL,
[MAPSEC_DES_COMMENT] [nvarchar](255) NOT NULL,
[MAPSEC_PEND_USERID] [nvarchar](64) ,
[MAPSEC_PEND_USERNAME] [nvarchar](100) ,
[MAPSEC_PEND_MACHINE] [nvarchar](100) ,
[MAPSEC_PEND_TIMEDATE] [datetime] ,
[MAPSEC_PEND_COMMENT] [nvarchar](255) ,
[MAPSEC_APPRV_USERID] [nvarchar](64) ,
[MAPSEC_APPRV_USERNAME] [nvarchar](100) ,
[MAPSEC_APPRV_MACHINE] [nvarchar](100) ,
[MAPSEC_APPRV_TIMEDATE] [datetime] ,
[MAPSEC_APPRV_COMMENT] [nvarchar](255) 
);
-- Primary Key
ALTER TABLE [STATEMENT_HISTORY]
ADD CONSTRAINT PK_STATEMENT_HISTORY PRIMARY KEY ([MAPSEC_ID], [MAPSEC_VERSION])
GO

-- Constraints


-- Foreign Keys


CREATE UNIQUE INDEX IX_STATEMENT_HISTORY_0 ON STATEMENT_HISTORY (STATEMENT_ID, MAPSEC_VERSION);
GO

ALTER TABLE STATEMENT_HISTORY ADD CONSTRAINT CK_IX_STATEMENT_HISTORY_0
 UNIQUE (STATEMENT_ID, MAPSEC_VERSION)

GO

CREATE TABLE [STATEMENT_WORKING]
(
[MAPSEC_ID] [uniqueidentifier] NOT NULL,
[MAPSEC_LIVEVERSION] [int] ,
[MAPSEC_CURRENTVERSION] [int] ,
[MAPSEC_ENABLED] [bit] 
);
-- Primary Key
ALTER TABLE [STATEMENT_WORKING]
ADD CONSTRAINT PK_STATEMENT_WORKING PRIMARY KEY ([MAPSEC_ID])
GO

-- Constraints


-- Foreign Keys


CREATE INDEX IX_STATEMENT_WORKING_0 ON STATEMENT_WORKING (MAPSEC_ID, MAPSEC_LIVEVERSION);
GO

GO

CREATE INDEX IX_STATEMENT_WORKING_1 ON STATEMENT_WORKING (MAPSEC_ID, MAPSEC_CURRENTVERSION);
GO

GO

CREATE VIEW STATEMENT AS 
SELECT [STATEMENT_HISTORY].[STATEMENT_ID],
[STATEMENT_HISTORY].[DESCRIPTION],
[STATEMENT_HISTORY].[CATEGORY],
[STATEMENT_HISTORY].[MAPSEC_ID]
FROM STATEMENT_HISTORY JOIN STATEMENT_WORKING ON [STATEMENT_HISTORY].[MAPSEC_ID] = [STATEMENT_WORKING].[MAPSEC_ID] AND [STATEMENT_HISTORY].[MAPSEC_VERSION] = [STATEMENT_WORKING].[MAPSEC_LIVEVERSION]
WHERE [STATEMENT_WORKING].[MAPSEC_ENABLED] = 1;
GO

CREATE VIEW STATEMENT_CURRENT AS 
SELECT [STATEMENT_HISTORY].[STATEMENT_ID],
[STATEMENT_HISTORY].[DESCRIPTION],
[STATEMENT_HISTORY].[CATEGORY],
[STATEMENT_HISTORY].[MAPSEC_ID]
FROM STATEMENT_HISTORY JOIN STATEMENT_WORKING ON [STATEMENT_HISTORY].[MAPSEC_ID] = [STATEMENT_WORKING].[MAPSEC_ID] AND [STATEMENT_HISTORY].[MAPSEC_VERSION] = [STATEMENT_WORKING].[MAPSEC_CURRENTVERSION]
WHERE [STATEMENT_WORKING].[MAPSEC_ENABLED] = 1;
GO


-- TRANSLATION
IF (EXISTS (SELECT * 
                 FROM INFORMATION_SCHEMA.TABLES 
                 WHERE TABLE_NAME = 'TRANSLATION_HISTORY'))
BEGIN
    DROP TABLE TRANSLATION_HISTORY;
END
GO

IF (EXISTS (SELECT * 
                 FROM INFORMATION_SCHEMA.TABLES 
                 WHERE TABLE_NAME = 'TRANSLATION_WORKING'))
BEGIN
    DROP TABLE TRANSLATION_WORKING;
END
GO

IF (EXISTS (SELECT * 
                 FROM INFORMATION_SCHEMA.VIEWS
                 WHERE TABLE_NAME = 'TRANSLATION'))
BEGIN
    DROP VIEW TRANSLATION;
END
GO

IF (EXISTS (SELECT * 
                 FROM INFORMATION_SCHEMA.VIEWS
                 WHERE TABLE_NAME = 'TRANSLATION_CURRENT'))
BEGIN
    DROP VIEW TRANSLATION_CURRENT;
END
GO

CREATE TABLE [TRANSLATION_HISTORY]
(
[TRANSLATION_ID] [nvarchar](30) NOT NULL,
[DESCRIPTION] [nvarchar](255) NOT NULL,
[CATEGORY] [nvarchar](255) NOT NULL,
[MAPSEC_ID] [uniqueidentifier] NOT NULL,
[MAPSEC_VERSION] [int] NOT NULL,
[MAPSEC_DES_USERID] [nvarchar](64) NOT NULL,
[MAPSEC_DES_USERNAME] [nvarchar](100) NOT NULL,
[MAPSEC_DES_MACHINE] [nvarchar](100) NOT NULL,
[MAPSEC_DES_TIMEDATE] [datetime] NOT NULL,
[MAPSEC_DES_COMMENT] [nvarchar](255) NOT NULL,
[MAPSEC_PEND_USERID] [nvarchar](64) ,
[MAPSEC_PEND_USERNAME] [nvarchar](100) ,
[MAPSEC_PEND_MACHINE] [nvarchar](100) ,
[MAPSEC_PEND_TIMEDATE] [datetime] ,
[MAPSEC_PEND_COMMENT] [nvarchar](255) ,
[MAPSEC_APPRV_USERID] [nvarchar](64) ,
[MAPSEC_APPRV_USERNAME] [nvarchar](100) ,
[MAPSEC_APPRV_MACHINE] [nvarchar](100) ,
[MAPSEC_APPRV_TIMEDATE] [datetime] ,
[MAPSEC_APPRV_COMMENT] [nvarchar](255) 
);
-- Primary Key
ALTER TABLE [TRANSLATION_HISTORY]
ADD CONSTRAINT PK_TRANSLATION_HISTORY PRIMARY KEY ([MAPSEC_ID], [MAPSEC_VERSION])
GO

-- Constraints


-- Foreign Keys


CREATE UNIQUE INDEX IX_TRANSLATION_HISTORY_0 ON TRANSLATION_HISTORY (TRANSLATION_ID, MAPSEC_VERSION);
GO

ALTER TABLE TRANSLATION_HISTORY ADD CONSTRAINT CK_IX_TRANSLATION_HISTORY_0
 UNIQUE (TRANSLATION_ID, MAPSEC_VERSION)

GO

CREATE TABLE [TRANSLATION_WORKING]
(
[MAPSEC_ID] [uniqueidentifier] NOT NULL,
[MAPSEC_LIVEVERSION] [int] ,
[MAPSEC_CURRENTVERSION] [int] ,
[MAPSEC_ENABLED] [bit] 
);
-- Primary Key
ALTER TABLE [TRANSLATION_WORKING]
ADD CONSTRAINT PK_TRANSLATION_WORKING PRIMARY KEY ([MAPSEC_ID])
GO

-- Constraints


-- Foreign Keys


CREATE INDEX IX_TRANSLATION_WORKING_0 ON TRANSLATION_WORKING (MAPSEC_ID, MAPSEC_LIVEVERSION);
GO

GO

CREATE INDEX IX_TRANSLATION_WORKING_1 ON TRANSLATION_WORKING (MAPSEC_ID, MAPSEC_CURRENTVERSION);
GO

GO

CREATE VIEW TRANSLATION AS 
SELECT [TRANSLATION_HISTORY].[TRANSLATION_ID],
[TRANSLATION_HISTORY].[DESCRIPTION],
[TRANSLATION_HISTORY].[CATEGORY],
[TRANSLATION_HISTORY].[MAPSEC_ID]
FROM TRANSLATION_HISTORY JOIN TRANSLATION_WORKING ON [TRANSLATION_HISTORY].[MAPSEC_ID] = [TRANSLATION_WORKING].[MAPSEC_ID] AND [TRANSLATION_HISTORY].[MAPSEC_VERSION] = [TRANSLATION_WORKING].[MAPSEC_LIVEVERSION]
WHERE [TRANSLATION_WORKING].[MAPSEC_ENABLED] = 1;
GO

CREATE VIEW TRANSLATION_CURRENT AS 
SELECT [TRANSLATION_HISTORY].[TRANSLATION_ID],
[TRANSLATION_HISTORY].[DESCRIPTION],
[TRANSLATION_HISTORY].[CATEGORY],
[TRANSLATION_HISTORY].[MAPSEC_ID]
FROM TRANSLATION_HISTORY JOIN TRANSLATION_WORKING ON [TRANSLATION_HISTORY].[MAPSEC_ID] = [TRANSLATION_WORKING].[MAPSEC_ID] AND [TRANSLATION_HISTORY].[MAPSEC_VERSION] = [TRANSLATION_WORKING].[MAPSEC_CURRENTVERSION]
WHERE [TRANSLATION_WORKING].[MAPSEC_ENABLED] = 1;
GO


-- TRANSLATION_CHILD
IF (EXISTS (SELECT * 
                 FROM INFORMATION_SCHEMA.TABLES 
                 WHERE TABLE_NAME = 'TRANSLATION_CHILD_HISTORY'))
BEGIN
    DROP TABLE TRANSLATION_CHILD_HISTORY;
END
GO

CREATE TABLE [TRANSLATION_CHILD_HISTORY]
(
[TRANSLATION_ID] [nvarchar](30) NOT NULL,
[COUNTRY_ID] [nvarchar](3) NOT NULL,
[VALUE] [nvarchar](255) NOT NULL,
[MAPSEC_ID] [uniqueidentifier] NOT NULL,
[MAPSEC_VERSION] [int] NOT NULL,
[MAPSEC_PARENTID] [uniqueidentifier] NOT NULL,
[MAPSEC_DES_USERID] [nvarchar](64) NOT NULL,
[MAPSEC_DES_USERNAME] [nvarchar](100) NOT NULL,
[MAPSEC_DES_MACHINE] [nvarchar](100) NOT NULL,
[MAPSEC_DES_TIMEDATE] [datetime] NOT NULL,
[MAPSEC_DES_COMMENT] [nvarchar](255) NOT NULL
);
-- Primary Key
ALTER TABLE [TRANSLATION_CHILD_HISTORY]
ADD CONSTRAINT PK_TRANSLATION_CHILD_HISTORY PRIMARY KEY ([MAPSEC_ID], [MAPSEC_VERSION])
GO

-- Constraints


-- Foreign Keys


CREATE UNIQUE INDEX IX_TRANSLATION_CHILD_HISTORY_0 ON TRANSLATION_CHILD_HISTORY (TRANSLATION_ID, MAPSEC_PARENTID, MAPSEC_VERSION);
GO

ALTER TABLE TRANSLATION_CHILD_HISTORY ADD CONSTRAINT CK_IX_TRANSLATION_CHILD_HISTORY_0
 UNIQUE (TRANSLATION_ID, MAPSEC_PARENTID, MAPSEC_VERSION)

GO


-- ASD
IF (EXISTS (SELECT * 
                 FROM INFORMATION_SCHEMA.TABLES 
                 WHERE TABLE_NAME = 'ASD_HISTORY'))
BEGIN
    DROP TABLE ASD_HISTORY;
END
GO

IF (EXISTS (SELECT * 
                 FROM INFORMATION_SCHEMA.TABLES 
                 WHERE TABLE_NAME = 'ASD_WORKING'))
BEGIN
    DROP TABLE ASD_WORKING;
END
GO

IF (EXISTS (SELECT * 
                 FROM INFORMATION_SCHEMA.VIEWS
                 WHERE TABLE_NAME = 'ASD'))
BEGIN
    DROP VIEW ASD;
END
GO

IF (EXISTS (SELECT * 
                 FROM INFORMATION_SCHEMA.VIEWS
                 WHERE TABLE_NAME = 'ASD_CURRENT'))
BEGIN
    DROP VIEW ASD_CURRENT;
END
GO

CREATE TABLE [ASD_HISTORY]
(
[ITEM_NUMBER] [nvarchar](30) NOT NULL,
[LABEL_SPEC_ID] [nvarchar](30) ,
[EXTRA_LABELS] [int] ,
[BASE_UOM] [nvarchar](50) ,
[SALES_UOM] [nvarchar](50) ,
[BATCH] [nvarchar](50) ,
[EXP_DATE] [datetime] ,
[FILTER_FIELD] [nvarchar](50) ,
[OT1] [nvarchar](50) ,
[OT1_QTY] [int] ,
[OT1_PKG_LVL] [int] ,
[OT2] [nvarchar](50) ,
[OT2_QTY] [int] ,
[OT2_PKG_LVL] [int] ,
[IN1] [nvarchar](50) ,
[IN1_QTY] [int] ,
[IN1_PKG_LVL] [int] ,
[IN2] [nvarchar](50) ,
[IN2_QTY] [int] ,
[IN2_PKG_LVL] [int] ,
[CS1] [nvarchar](50) ,
[CS1_QTY] [int] ,
[CS1_PKG_LVL] [int] ,
[CS2] [nvarchar](50) ,
[CS2_QTY] [int] ,
[CS2_PKG_LVL] [int] ,
[MS1] [nvarchar](50) ,
[MS1_QTY] [int] ,
[MS1_PKG_LVL] [int] ,
[MS2] [nvarchar](50) ,
[MS2_QTY] [int] ,
[MS2_PKG_LVL] [int] ,
[SAP_PLANT_NAME] [nvarchar](50) ,
[GTIN1] [nvarchar](50) ,
[GTIN1_UOM] [nvarchar](50) ,
[GTIN2] [nvarchar](50) ,
[GTIN2_UOM] [nvarchar](50) ,
[GTIN3] [nvarchar](50) ,
[GTIN3_UOM] [nvarchar](50) ,
[TRADE_NAME_160] [nvarchar](50) ,
[DES1_30] [nvarchar](50) ,
[DES2_40] [nvarchar](50) ,
[DES3_50] [nvarchar](50) ,
[DES4] [nvarchar](50) ,
[DES5] [nvarchar](50) ,
[DES6] [nvarchar](50) ,
[DIM1_10] [nvarchar](50) ,
[DIM2_20] [nvarchar](50) ,
[DIM3] [nvarchar](50) ,
[DIM4] [nvarchar](50) ,
[DIM5] [nvarchar](50) ,
[DIM6] [nvarchar](50) ,
[TEXT220] [nvarchar](50) ,
[TEXT230] [nvarchar](50) ,
[TEXT240] [nvarchar](50) ,
[TEXT250] [nvarchar](50) ,
[TEXT260] [nvarchar](50) ,
[TEXT270] [nvarchar](50) ,
[TEXT280] [nvarchar](50) ,
[TEXT290] [nvarchar](50) ,
[TEXT300] [nvarchar](50) ,
[TEXT310] [nvarchar](50) ,
[TEXT330] [nvarchar](50) ,
[TEXT340] [nvarchar](50) ,
[TEXT350] [nvarchar](50) ,
[TEXT360] [nvarchar](50) ,
[TEXT370] [nvarchar](50) ,
[TEXT380] [nvarchar](50) ,
[TEXT390] [nvarchar](50) ,
[TEXT400] [nvarchar](50) ,
[TEXT410] [nvarchar](50) ,
[TEXT420] [nvarchar](50) ,
[TEXT430] [nvarchar](50) ,
[TEXT440] [nvarchar](50) ,
[IS_SERIALIZED] [nvarchar](1) ,
[PATENT_NUM1] [nvarchar](50) ,
[PATENT_NUM2] [nvarchar](50) ,
[HUMIDITY_LMT_UPPER] [nvarchar](50) ,
[HUMIDITY_LMT_LOWER] [nvarchar](50) ,
[TEMP_LMT_LOWER] [nvarchar](50) ,
[TEMP_LMT_UPPER] [nvarchar](50) ,
[CE_APPROVED] [nvarchar](50) ,
[SHELF_LIFE] [nvarchar](50) ,
[SHELF_LIFE_UOM] [nvarchar](50) ,
[MFG_CODE] [nvarchar](10) ,
[COO] [nvarchar](3) ,
[COO_VERSION] [int] ,
[CO_ADDRESS1] [nvarchar](30) ,
[CO_ADDRESS1_VERSION] [int] ,
[CO_ADDRESS2] [nvarchar](30) ,
[CO_ADDRESS2_VERSION] [int] ,
[CO_ADDRESS3] [nvarchar](30) ,
[CO_ADDRESS3_VERSION] [int] ,
[PATENT_STMT] [nvarchar](30) ,
[PATENT_STMT_VERSION] [int] ,
[PHRASE1] [nvarchar](30) ,
[PHRASE1_VERSION] [int] ,
[PHRASE2] [nvarchar](30) ,
[PHRASE2_VERSION] [int] ,
[PHRASE3] [nvarchar](30) ,
[PHRASE3_VERSION] [int] ,
[PHRASE4] [nvarchar](30) ,
[PHRASE4_VERSION] [int] ,
[PHRASE5] [nvarchar](30) ,
[PHRASE5_VERSION] [int] ,
[COLOR1] [nvarchar](30) ,
[COLOR1_VERSION] [int] ,
[COLOR2] [nvarchar](30) ,
[COLOR2_VERSION] [int] ,
[COLOR3] [nvarchar](30) ,
[COLOR3_VERSION] [int] ,
[IMAGE1_170] [nvarchar](30) ,
[IMAGE1_170_VERSION] [int] ,
[IMAGE2] [nvarchar](30) ,
[IMAGE2_VERSION] [int] ,
[IMAGE3] [nvarchar](30) ,
[IMAGE3_VERSION] [int] ,
[IMAGE4] [nvarchar](30) ,
[IMAGE4_VERSION] [int] ,
[IMAGE5] [nvarchar](30) ,
[IMAGE5_VERSION] [int] ,
[IMAGE6] [nvarchar](30) ,
[IMAGE6_VERSION] [int] ,
[SYMBOL_CE] [nvarchar](30) ,
[SYMBOL_CE_VERSION] [int] ,
[SYMBOL_DARK_STORAGE] [nvarchar](30) ,
[SYMBOL_DARK_STORAGE_VERSION] [int] ,
[SYMBOL_DOM] [nvarchar](30) ,
[SYMBOL_DOM_VERSION] [int] ,
[SYMBOL_IFU] [nvarchar](30) ,
[SYMBOL_IFU_VERSION] [int] ,
[SYMBOL_KEEP_DRY] [nvarchar](30) ,
[SYMBOL_KEEP_DRY_VERSION] [int] ,
[SYMBOL_LATEX_FREE] [nvarchar](30) ,
[SYMBOL_LATEX_FREE_VERSION] [int] ,
[SYMBOL_RX] [nvarchar](30) ,
[SYMBOL_RX_VERSION] [int] ,
[SYMBOL_SINGLE_USE] [nvarchar](30) ,
[SYMBOL_SINGLE_USE_VERSION] [int] ,
[SYMBOL_STERILE_MTHD] [nvarchar](30) ,
[SYMBOL_STERILE_MTHD_VERSION] [int] ,
[SYMBOL_USER_DEF1] [nvarchar](30) ,
[SYMBOL_USER_DEF1_VERSION] [int] ,
[SYMBOL_USER_DEF2] [nvarchar](30) ,
[SYMBOL_USER_DEF2_VERSION] [int] ,
[SYMBOL_USER_DEF3] [nvarchar](30) ,
[SYMBOL_USER_DEF3_VERSION] [int] ,
[SYMBOL_USER_DEF4] [nvarchar](30) ,
[SYMBOL_USER_DEF4_VERSION] [int] ,
[SYMBOL_USER_DEF5] [nvarchar](30) ,
[SYMBOL_USER_DEF5_VERSION] [int] ,
[LANG_STMT1] [nvarchar](30) ,
[LANG_STMT1_VERSION] [int] ,
[LANG_STMT2] [nvarchar](30) ,
[LANG_STMT2_VERSION] [int] ,
[LANG_STMT3] [nvarchar](30) ,
[LANG_STMT3_VERSION] [int] ,
[LANG_STMT4] [nvarchar](30) ,
[LANG_STMT4_VERSION] [int] ,
[LANG_STMT5] [nvarchar](30) ,
[LANG_STMT5_VERSION] [int] ,
[LATEX_FREE_STMT] [nvarchar](30) ,
[LATEX_FREE_STMT_VERSION] [int] ,
[SAMP_TRIAL_STMT_190] [nvarchar](30) ,
[SAMP_TRIAL_STMT_190_VERSION] [int] ,
[SERIAL_PREFIX] [nvarchar](30) ,
[SERIAL_PREFIX_VERSION] [int] ,
[SIDE_STMT_180] [nvarchar](30) ,
[SIDE_STMT_180_VERSION] [int] ,
[SIZE_STMT_200] [nvarchar](30) ,
[SIZE_STMT_200_VERSION] [int] ,
[MAPSEC_ID] [uniqueidentifier] NOT NULL,
[MAPSEC_VERSION] [int] NOT NULL,
[MAPSEC_VERSION_Enabled] [bit] NOT NULL,
[MAPSEC_DES_USERID] [nvarchar](64) NOT NULL,
[MAPSEC_DES_USERNAME] [nvarchar](100) NOT NULL,
[MAPSEC_DES_MACHINE] [nvarchar](100) NOT NULL,
[MAPSEC_DES_TIMEDATE] [datetime] NOT NULL,
[MAPSEC_DES_COMMENT] [nvarchar](255) NOT NULL,
[MAPSEC_PEND_USERID] [nvarchar](64) ,
[MAPSEC_PEND_USERNAME] [nvarchar](100) ,
[MAPSEC_PEND_MACHINE] [nvarchar](100) ,
[MAPSEC_PEND_TIMEDATE] [datetime] ,
[MAPSEC_PEND_COMMENT] [nvarchar](255) ,
[MAPSEC_APPRV_USERID] [nvarchar](64) ,
[MAPSEC_APPRV_USERNAME] [nvarchar](100) ,
[MAPSEC_APPRV_MACHINE] [nvarchar](100) ,
[MAPSEC_APPRV_TIMEDATE] [datetime] ,
[MAPSEC_APPRV_COMMENT] [nvarchar](255) 
);
-- Primary Key
ALTER TABLE [ASD_HISTORY]
ADD CONSTRAINT PK_ASD_HISTORY PRIMARY KEY ([MAPSEC_ID], [MAPSEC_VERSION])
GO

-- Constraints
ALTER TABLE [ASD_HISTORY] ADD CONSTRAINT CK_ASD_HISTORY_0 CHECK ((COO IS NULL AND COO_VERSION IS NULL) OR (COO IS NOT NULL AND COO_VERSION IS NOT NULL))ALTER TABLE [ASD_HISTORY] ADD CONSTRAINT CK_ASD_HISTORY_1 CHECK ((CO_ADDRESS1 IS NULL AND CO_ADDRESS1_VERSION IS NULL) OR (CO_ADDRESS1 IS NOT NULL AND CO_ADDRESS1_VERSION IS NOT NULL))ALTER TABLE [ASD_HISTORY] ADD CONSTRAINT CK_ASD_HISTORY_2 CHECK ((CO_ADDRESS2 IS NULL AND CO_ADDRESS2_VERSION IS NULL) OR (CO_ADDRESS2 IS NOT NULL AND CO_ADDRESS2_VERSION IS NOT NULL))ALTER TABLE [ASD_HISTORY] ADD CONSTRAINT CK_ASD_HISTORY_3 CHECK ((CO_ADDRESS3 IS NULL AND CO_ADDRESS3_VERSION IS NULL) OR (CO_ADDRESS3 IS NOT NULL AND CO_ADDRESS3_VERSION IS NOT NULL))ALTER TABLE [ASD_HISTORY] ADD CONSTRAINT CK_ASD_HISTORY_4 CHECK ((PATENT_STMT IS NULL AND PATENT_STMT_VERSION IS NULL) OR (PATENT_STMT IS NOT NULL AND PATENT_STMT_VERSION IS NOT NULL))ALTER TABLE [ASD_HISTORY] ADD CONSTRAINT CK_ASD_HISTORY_5 CHECK ((PHRASE1 IS NULL AND PHRASE1_VERSION IS NULL) OR (PHRASE1 IS NOT NULL AND PHRASE1_VERSION IS NOT NULL))ALTER TABLE [ASD_HISTORY] ADD CONSTRAINT CK_ASD_HISTORY_6 CHECK ((PHRASE2 IS NULL AND PHRASE2_VERSION IS NULL) OR (PHRASE2 IS NOT NULL AND PHRASE2_VERSION IS NOT NULL))ALTER TABLE [ASD_HISTORY] ADD CONSTRAINT CK_ASD_HISTORY_7 CHECK ((PHRASE3 IS NULL AND PHRASE3_VERSION IS NULL) OR (PHRASE3 IS NOT NULL AND PHRASE3_VERSION IS NOT NULL))ALTER TABLE [ASD_HISTORY] ADD CONSTRAINT CK_ASD_HISTORY_8 CHECK ((PHRASE4 IS NULL AND PHRASE4_VERSION IS NULL) OR (PHRASE4 IS NOT NULL AND PHRASE4_VERSION IS NOT NULL))ALTER TABLE [ASD_HISTORY] ADD CONSTRAINT CK_ASD_HISTORY_9 CHECK ((PHRASE5 IS NULL AND PHRASE5_VERSION IS NULL) OR (PHRASE5 IS NOT NULL AND PHRASE5_VERSION IS NOT NULL))ALTER TABLE [ASD_HISTORY] ADD CONSTRAINT CK_ASD_HISTORY_10 CHECK ((COLOR1 IS NULL AND COLOR1_VERSION IS NULL) OR (COLOR1 IS NOT NULL AND COLOR1_VERSION IS NOT NULL))ALTER TABLE [ASD_HISTORY] ADD CONSTRAINT CK_ASD_HISTORY_11 CHECK ((COLOR2 IS NULL AND COLOR2_VERSION IS NULL) OR (COLOR2 IS NOT NULL AND COLOR2_VERSION IS NOT NULL))ALTER TABLE [ASD_HISTORY] ADD CONSTRAINT CK_ASD_HISTORY_12 CHECK ((COLOR3 IS NULL AND COLOR3_VERSION IS NULL) OR (COLOR3 IS NOT NULL AND COLOR3_VERSION IS NOT NULL))ALTER TABLE [ASD_HISTORY] ADD CONSTRAINT CK_ASD_HISTORY_13 CHECK ((IMAGE1_170 IS NULL AND IMAGE1_170_VERSION IS NULL) OR (IMAGE1_170 IS NOT NULL AND IMAGE1_170_VERSION IS NOT NULL))ALTER TABLE [ASD_HISTORY] ADD CONSTRAINT CK_ASD_HISTORY_14 CHECK ((IMAGE2 IS NULL AND IMAGE2_VERSION IS NULL) OR (IMAGE2 IS NOT NULL AND IMAGE2_VERSION IS NOT NULL))ALTER TABLE [ASD_HISTORY] ADD CONSTRAINT CK_ASD_HISTORY_15 CHECK ((IMAGE3 IS NULL AND IMAGE3_VERSION IS NULL) OR (IMAGE3 IS NOT NULL AND IMAGE3_VERSION IS NOT NULL))ALTER TABLE [ASD_HISTORY] ADD CONSTRAINT CK_ASD_HISTORY_16 CHECK ((IMAGE4 IS NULL AND IMAGE4_VERSION IS NULL) OR (IMAGE4 IS NOT NULL AND IMAGE4_VERSION IS NOT NULL))ALTER TABLE [ASD_HISTORY] ADD CONSTRAINT CK_ASD_HISTORY_17 CHECK ((IMAGE5 IS NULL AND IMAGE5_VERSION IS NULL) OR (IMAGE5 IS NOT NULL AND IMAGE5_VERSION IS NOT NULL))ALTER TABLE [ASD_HISTORY] ADD CONSTRAINT CK_ASD_HISTORY_18 CHECK ((IMAGE6 IS NULL AND IMAGE6_VERSION IS NULL) OR (IMAGE6 IS NOT NULL AND IMAGE6_VERSION IS NOT NULL))ALTER TABLE [ASD_HISTORY] ADD CONSTRAINT CK_ASD_HISTORY_19 CHECK ((SYMBOL_CE IS NULL AND SYMBOL_CE_VERSION IS NULL) OR (SYMBOL_CE IS NOT NULL AND SYMBOL_CE_VERSION IS NOT NULL))ALTER TABLE [ASD_HISTORY] ADD CONSTRAINT CK_ASD_HISTORY_20 CHECK ((SYMBOL_DARK_STORAGE IS NULL AND SYMBOL_DARK_STORAGE_VERSION IS NULL) OR (SYMBOL_DARK_STORAGE IS NOT NULL AND SYMBOL_DARK_STORAGE_VERSION IS NOT NULL))ALTER TABLE [ASD_HISTORY] ADD CONSTRAINT CK_ASD_HISTORY_21 CHECK ((SYMBOL_DOM IS NULL AND SYMBOL_DOM_VERSION IS NULL) OR (SYMBOL_DOM IS NOT NULL AND SYMBOL_DOM_VERSION IS NOT NULL))ALTER TABLE [ASD_HISTORY] ADD CONSTRAINT CK_ASD_HISTORY_22 CHECK ((SYMBOL_IFU IS NULL AND SYMBOL_IFU_VERSION IS NULL) OR (SYMBOL_IFU IS NOT NULL AND SYMBOL_IFU_VERSION IS NOT NULL))ALTER TABLE [ASD_HISTORY] ADD CONSTRAINT CK_ASD_HISTORY_23 CHECK ((SYMBOL_KEEP_DRY IS NULL AND SYMBOL_KEEP_DRY_VERSION IS NULL) OR (SYMBOL_KEEP_DRY IS NOT NULL AND SYMBOL_KEEP_DRY_VERSION IS NOT NULL))ALTER TABLE [ASD_HISTORY] ADD CONSTRAINT CK_ASD_HISTORY_24 CHECK ((SYMBOL_LATEX_FREE IS NULL AND SYMBOL_LATEX_FREE_VERSION IS NULL) OR (SYMBOL_LATEX_FREE IS NOT NULL AND SYMBOL_LATEX_FREE_VERSION IS NOT NULL))ALTER TABLE [ASD_HISTORY] ADD CONSTRAINT CK_ASD_HISTORY_25 CHECK ((SYMBOL_RX IS NULL AND SYMBOL_RX_VERSION IS NULL) OR (SYMBOL_RX IS NOT NULL AND SYMBOL_RX_VERSION IS NOT NULL))ALTER TABLE [ASD_HISTORY] ADD CONSTRAINT CK_ASD_HISTORY_26 CHECK ((SYMBOL_SINGLE_USE IS NULL AND SYMBOL_SINGLE_USE_VERSION IS NULL) OR (SYMBOL_SINGLE_USE IS NOT NULL AND SYMBOL_SINGLE_USE_VERSION IS NOT NULL))ALTER TABLE [ASD_HISTORY] ADD CONSTRAINT CK_ASD_HISTORY_27 CHECK ((SYMBOL_STERILE_MTHD IS NULL AND SYMBOL_STERILE_MTHD_VERSION IS NULL) OR (SYMBOL_STERILE_MTHD IS NOT NULL AND SYMBOL_STERILE_MTHD_VERSION IS NOT NULL))ALTER TABLE [ASD_HISTORY] ADD CONSTRAINT CK_ASD_HISTORY_28 CHECK ((SYMBOL_USER_DEF1 IS NULL AND SYMBOL_USER_DEF1_VERSION IS NULL) OR (SYMBOL_USER_DEF1 IS NOT NULL AND SYMBOL_USER_DEF1_VERSION IS NOT NULL))ALTER TABLE [ASD_HISTORY] ADD CONSTRAINT CK_ASD_HISTORY_29 CHECK ((SYMBOL_USER_DEF2 IS NULL AND SYMBOL_USER_DEF2_VERSION IS NULL) OR (SYMBOL_USER_DEF2 IS NOT NULL AND SYMBOL_USER_DEF2_VERSION IS NOT NULL))ALTER TABLE [ASD_HISTORY] ADD CONSTRAINT CK_ASD_HISTORY_30 CHECK ((SYMBOL_USER_DEF3 IS NULL AND SYMBOL_USER_DEF3_VERSION IS NULL) OR (SYMBOL_USER_DEF3 IS NOT NULL AND SYMBOL_USER_DEF3_VERSION IS NOT NULL))ALTER TABLE [ASD_HISTORY] ADD CONSTRAINT CK_ASD_HISTORY_31 CHECK ((SYMBOL_USER_DEF4 IS NULL AND SYMBOL_USER_DEF4_VERSION IS NULL) OR (SYMBOL_USER_DEF4 IS NOT NULL AND SYMBOL_USER_DEF4_VERSION IS NOT NULL))ALTER TABLE [ASD_HISTORY] ADD CONSTRAINT CK_ASD_HISTORY_32 CHECK ((SYMBOL_USER_DEF5 IS NULL AND SYMBOL_USER_DEF5_VERSION IS NULL) OR (SYMBOL_USER_DEF5 IS NOT NULL AND SYMBOL_USER_DEF5_VERSION IS NOT NULL))ALTER TABLE [ASD_HISTORY] ADD CONSTRAINT CK_ASD_HISTORY_33 CHECK ((LANG_STMT1 IS NULL AND LANG_STMT1_VERSION IS NULL) OR (LANG_STMT1 IS NOT NULL AND LANG_STMT1_VERSION IS NOT NULL))ALTER TABLE [ASD_HISTORY] ADD CONSTRAINT CK_ASD_HISTORY_34 CHECK ((LANG_STMT2 IS NULL AND LANG_STMT2_VERSION IS NULL) OR (LANG_STMT2 IS NOT NULL AND LANG_STMT2_VERSION IS NOT NULL))ALTER TABLE [ASD_HISTORY] ADD CONSTRAINT CK_ASD_HISTORY_35 CHECK ((LANG_STMT3 IS NULL AND LANG_STMT3_VERSION IS NULL) OR (LANG_STMT3 IS NOT NULL AND LANG_STMT3_VERSION IS NOT NULL))ALTER TABLE [ASD_HISTORY] ADD CONSTRAINT CK_ASD_HISTORY_36 CHECK ((LANG_STMT4 IS NULL AND LANG_STMT4_VERSION IS NULL) OR (LANG_STMT4 IS NOT NULL AND LANG_STMT4_VERSION IS NOT NULL))ALTER TABLE [ASD_HISTORY] ADD CONSTRAINT CK_ASD_HISTORY_37 CHECK ((LANG_STMT5 IS NULL AND LANG_STMT5_VERSION IS NULL) OR (LANG_STMT5 IS NOT NULL AND LANG_STMT5_VERSION IS NOT NULL))ALTER TABLE [ASD_HISTORY] ADD CONSTRAINT CK_ASD_HISTORY_38 CHECK ((LATEX_FREE_STMT IS NULL AND LATEX_FREE_STMT_VERSION IS NULL) OR (LATEX_FREE_STMT IS NOT NULL AND LATEX_FREE_STMT_VERSION IS NOT NULL))ALTER TABLE [ASD_HISTORY] ADD CONSTRAINT CK_ASD_HISTORY_39 CHECK ((SAMP_TRIAL_STMT_190 IS NULL AND SAMP_TRIAL_STMT_190_VERSION IS NULL) OR (SAMP_TRIAL_STMT_190 IS NOT NULL AND SAMP_TRIAL_STMT_190_VERSION IS NOT NULL))ALTER TABLE [ASD_HISTORY] ADD CONSTRAINT CK_ASD_HISTORY_40 CHECK ((SERIAL_PREFIX IS NULL AND SERIAL_PREFIX_VERSION IS NULL) OR (SERIAL_PREFIX IS NOT NULL AND SERIAL_PREFIX_VERSION IS NOT NULL))ALTER TABLE [ASD_HISTORY] ADD CONSTRAINT CK_ASD_HISTORY_41 CHECK ((SIDE_STMT_180 IS NULL AND SIDE_STMT_180_VERSION IS NULL) OR (SIDE_STMT_180 IS NOT NULL AND SIDE_STMT_180_VERSION IS NOT NULL))ALTER TABLE [ASD_HISTORY] ADD CONSTRAINT CK_ASD_HISTORY_42 CHECK ((SIZE_STMT_200 IS NULL AND SIZE_STMT_200_VERSION IS NULL) OR (SIZE_STMT_200 IS NOT NULL AND SIZE_STMT_200_VERSION IS NOT NULL))

-- Foreign Keys
ALTER TABLE [ASD_HISTORY] ADD CONSTRAINT FK_ASD_HISTORYCOUNTRY_HISTORY_0 FOREIGN KEY ([COO], [COO_VERSION]) REFERENCES [COUNTRY_HISTORY]([COUNTRY_ID], [MAPSEC_Version])  
GO
ALTER TABLE [ASD_HISTORY] ADD CONSTRAINT FK_ASD_HISTORYSTATEMENT_HISTORY_1 FOREIGN KEY ([CO_ADDRESS1], [CO_ADDRESS1_VERSION]) REFERENCES [STATEMENT_HISTORY]([STATEMENT_ID], [MAPSEC_Version])  
GO
ALTER TABLE [ASD_HISTORY] ADD CONSTRAINT FK_ASD_HISTORYSTATEMENT_HISTORY_2 FOREIGN KEY ([CO_ADDRESS2], [CO_ADDRESS2_VERSION]) REFERENCES [STATEMENT_HISTORY]([STATEMENT_ID], [MAPSEC_Version])  
GO
ALTER TABLE [ASD_HISTORY] ADD CONSTRAINT FK_ASD_HISTORYSTATEMENT_HISTORY_3 FOREIGN KEY ([CO_ADDRESS3], [CO_ADDRESS3_VERSION]) REFERENCES [STATEMENT_HISTORY]([STATEMENT_ID], [MAPSEC_Version])  
GO
ALTER TABLE [ASD_HISTORY] ADD CONSTRAINT FK_ASD_HISTORYSTATEMENT_HISTORY_4 FOREIGN KEY ([PATENT_STMT], [PATENT_STMT_VERSION]) REFERENCES [STATEMENT_HISTORY]([STATEMENT_ID], [MAPSEC_Version])  
GO
ALTER TABLE [ASD_HISTORY] ADD CONSTRAINT FK_ASD_HISTORYSTATEMENT_HISTORY_5 FOREIGN KEY ([PHRASE1], [PHRASE1_VERSION]) REFERENCES [STATEMENT_HISTORY]([STATEMENT_ID], [MAPSEC_Version])  
GO
ALTER TABLE [ASD_HISTORY] ADD CONSTRAINT FK_ASD_HISTORYSTATEMENT_HISTORY_6 FOREIGN KEY ([PHRASE2], [PHRASE2_VERSION]) REFERENCES [STATEMENT_HISTORY]([STATEMENT_ID], [MAPSEC_Version])  
GO
ALTER TABLE [ASD_HISTORY] ADD CONSTRAINT FK_ASD_HISTORYSTATEMENT_HISTORY_7 FOREIGN KEY ([PHRASE3], [PHRASE3_VERSION]) REFERENCES [STATEMENT_HISTORY]([STATEMENT_ID], [MAPSEC_Version])  
GO
ALTER TABLE [ASD_HISTORY] ADD CONSTRAINT FK_ASD_HISTORYSTATEMENT_HISTORY_8 FOREIGN KEY ([PHRASE4], [PHRASE4_VERSION]) REFERENCES [STATEMENT_HISTORY]([STATEMENT_ID], [MAPSEC_Version])  
GO
ALTER TABLE [ASD_HISTORY] ADD CONSTRAINT FK_ASD_HISTORYSTATEMENT_HISTORY_9 FOREIGN KEY ([PHRASE5], [PHRASE5_VERSION]) REFERENCES [STATEMENT_HISTORY]([STATEMENT_ID], [MAPSEC_Version])  
GO
ALTER TABLE [ASD_HISTORY] ADD CONSTRAINT FK_ASD_HISTORYIMAGE_HISTORY_10 FOREIGN KEY ([COLOR1], [COLOR1_VERSION]) REFERENCES [IMAGE_HISTORY]([IMAGE_ID], [MAPSEC_Version])  
GO
ALTER TABLE [ASD_HISTORY] ADD CONSTRAINT FK_ASD_HISTORYIMAGE_HISTORY_11 FOREIGN KEY ([COLOR2], [COLOR2_VERSION]) REFERENCES [IMAGE_HISTORY]([IMAGE_ID], [MAPSEC_Version])  
GO
ALTER TABLE [ASD_HISTORY] ADD CONSTRAINT FK_ASD_HISTORYIMAGE_HISTORY_12 FOREIGN KEY ([COLOR3], [COLOR3_VERSION]) REFERENCES [IMAGE_HISTORY]([IMAGE_ID], [MAPSEC_Version])  
GO
ALTER TABLE [ASD_HISTORY] ADD CONSTRAINT FK_ASD_HISTORYIMAGE_HISTORY_13 FOREIGN KEY ([IMAGE1_170], [IMAGE1_170_VERSION]) REFERENCES [IMAGE_HISTORY]([IMAGE_ID], [MAPSEC_Version])  
GO
ALTER TABLE [ASD_HISTORY] ADD CONSTRAINT FK_ASD_HISTORYIMAGE_HISTORY_14 FOREIGN KEY ([IMAGE2], [IMAGE2_VERSION]) REFERENCES [IMAGE_HISTORY]([IMAGE_ID], [MAPSEC_Version])  
GO
ALTER TABLE [ASD_HISTORY] ADD CONSTRAINT FK_ASD_HISTORYIMAGE_HISTORY_15 FOREIGN KEY ([IMAGE3], [IMAGE3_VERSION]) REFERENCES [IMAGE_HISTORY]([IMAGE_ID], [MAPSEC_Version])  
GO
ALTER TABLE [ASD_HISTORY] ADD CONSTRAINT FK_ASD_HISTORYIMAGE_HISTORY_16 FOREIGN KEY ([IMAGE4], [IMAGE4_VERSION]) REFERENCES [IMAGE_HISTORY]([IMAGE_ID], [MAPSEC_Version])  
GO
ALTER TABLE [ASD_HISTORY] ADD CONSTRAINT FK_ASD_HISTORYIMAGE_HISTORY_17 FOREIGN KEY ([IMAGE5], [IMAGE5_VERSION]) REFERENCES [IMAGE_HISTORY]([IMAGE_ID], [MAPSEC_Version])  
GO
ALTER TABLE [ASD_HISTORY] ADD CONSTRAINT FK_ASD_HISTORYIMAGE_HISTORY_18 FOREIGN KEY ([IMAGE6], [IMAGE6_VERSION]) REFERENCES [IMAGE_HISTORY]([IMAGE_ID], [MAPSEC_Version])  
GO
ALTER TABLE [ASD_HISTORY] ADD CONSTRAINT FK_ASD_HISTORYIMAGE_HISTORY_19 FOREIGN KEY ([SYMBOL_CE], [SYMBOL_CE_VERSION]) REFERENCES [IMAGE_HISTORY]([IMAGE_ID], [MAPSEC_Version])  
GO
ALTER TABLE [ASD_HISTORY] ADD CONSTRAINT FK_ASD_HISTORYIMAGE_HISTORY_20 FOREIGN KEY ([SYMBOL_DARK_STORAGE], [SYMBOL_DARK_STORAGE_VERSION]) REFERENCES [IMAGE_HISTORY]([IMAGE_ID], [MAPSEC_Version])  
GO
ALTER TABLE [ASD_HISTORY] ADD CONSTRAINT FK_ASD_HISTORYIMAGE_HISTORY_21 FOREIGN KEY ([SYMBOL_DOM], [SYMBOL_DOM_VERSION]) REFERENCES [IMAGE_HISTORY]([IMAGE_ID], [MAPSEC_Version])  
GO
ALTER TABLE [ASD_HISTORY] ADD CONSTRAINT FK_ASD_HISTORYIMAGE_HISTORY_22 FOREIGN KEY ([SYMBOL_IFU], [SYMBOL_IFU_VERSION]) REFERENCES [IMAGE_HISTORY]([IMAGE_ID], [MAPSEC_Version])  
GO
ALTER TABLE [ASD_HISTORY] ADD CONSTRAINT FK_ASD_HISTORYIMAGE_HISTORY_23 FOREIGN KEY ([SYMBOL_KEEP_DRY], [SYMBOL_KEEP_DRY_VERSION]) REFERENCES [IMAGE_HISTORY]([IMAGE_ID], [MAPSEC_Version])  
GO
ALTER TABLE [ASD_HISTORY] ADD CONSTRAINT FK_ASD_HISTORYIMAGE_HISTORY_24 FOREIGN KEY ([SYMBOL_LATEX_FREE], [SYMBOL_LATEX_FREE_VERSION]) REFERENCES [IMAGE_HISTORY]([IMAGE_ID], [MAPSEC_Version])  
GO
ALTER TABLE [ASD_HISTORY] ADD CONSTRAINT FK_ASD_HISTORYIMAGE_HISTORY_25 FOREIGN KEY ([SYMBOL_RX], [SYMBOL_RX_VERSION]) REFERENCES [IMAGE_HISTORY]([IMAGE_ID], [MAPSEC_Version])  
GO
ALTER TABLE [ASD_HISTORY] ADD CONSTRAINT FK_ASD_HISTORYIMAGE_HISTORY_26 FOREIGN KEY ([SYMBOL_SINGLE_USE], [SYMBOL_SINGLE_USE_VERSION]) REFERENCES [IMAGE_HISTORY]([IMAGE_ID], [MAPSEC_Version])  
GO
ALTER TABLE [ASD_HISTORY] ADD CONSTRAINT FK_ASD_HISTORYIMAGE_HISTORY_27 FOREIGN KEY ([SYMBOL_STERILE_MTHD], [SYMBOL_STERILE_MTHD_VERSION]) REFERENCES [IMAGE_HISTORY]([IMAGE_ID], [MAPSEC_Version])  
GO
ALTER TABLE [ASD_HISTORY] ADD CONSTRAINT FK_ASD_HISTORYIMAGE_HISTORY_28 FOREIGN KEY ([SYMBOL_USER_DEF1], [SYMBOL_USER_DEF1_VERSION]) REFERENCES [IMAGE_HISTORY]([IMAGE_ID], [MAPSEC_Version])  
GO
ALTER TABLE [ASD_HISTORY] ADD CONSTRAINT FK_ASD_HISTORYIMAGE_HISTORY_29 FOREIGN KEY ([SYMBOL_USER_DEF2], [SYMBOL_USER_DEF2_VERSION]) REFERENCES [IMAGE_HISTORY]([IMAGE_ID], [MAPSEC_Version])  
GO
ALTER TABLE [ASD_HISTORY] ADD CONSTRAINT FK_ASD_HISTORYIMAGE_HISTORY_30 FOREIGN KEY ([SYMBOL_USER_DEF3], [SYMBOL_USER_DEF3_VERSION]) REFERENCES [IMAGE_HISTORY]([IMAGE_ID], [MAPSEC_Version])  
GO
ALTER TABLE [ASD_HISTORY] ADD CONSTRAINT FK_ASD_HISTORYIMAGE_HISTORY_31 FOREIGN KEY ([SYMBOL_USER_DEF4], [SYMBOL_USER_DEF4_VERSION]) REFERENCES [IMAGE_HISTORY]([IMAGE_ID], [MAPSEC_Version])  
GO
ALTER TABLE [ASD_HISTORY] ADD CONSTRAINT FK_ASD_HISTORYIMAGE_HISTORY_32 FOREIGN KEY ([SYMBOL_USER_DEF5], [SYMBOL_USER_DEF5_VERSION]) REFERENCES [IMAGE_HISTORY]([IMAGE_ID], [MAPSEC_Version])  
GO
ALTER TABLE [ASD_HISTORY] ADD CONSTRAINT FK_ASD_HISTORYTRANSLATION_HISTORY_33 FOREIGN KEY ([LANG_STMT1], [LANG_STMT1_VERSION]) REFERENCES [TRANSLATION_HISTORY]([TRANSLATION_ID], [MAPSEC_Version])  
GO
ALTER TABLE [ASD_HISTORY] ADD CONSTRAINT FK_ASD_HISTORYTRANSLATION_HISTORY_34 FOREIGN KEY ([LANG_STMT2], [LANG_STMT2_VERSION]) REFERENCES [TRANSLATION_HISTORY]([TRANSLATION_ID], [MAPSEC_Version])  
GO
ALTER TABLE [ASD_HISTORY] ADD CONSTRAINT FK_ASD_HISTORYTRANSLATION_HISTORY_35 FOREIGN KEY ([LANG_STMT3], [LANG_STMT3_VERSION]) REFERENCES [TRANSLATION_HISTORY]([TRANSLATION_ID], [MAPSEC_Version])  
GO
ALTER TABLE [ASD_HISTORY] ADD CONSTRAINT FK_ASD_HISTORYTRANSLATION_HISTORY_36 FOREIGN KEY ([LANG_STMT4], [LANG_STMT4_VERSION]) REFERENCES [TRANSLATION_HISTORY]([TRANSLATION_ID], [MAPSEC_Version])  
GO
ALTER TABLE [ASD_HISTORY] ADD CONSTRAINT FK_ASD_HISTORYTRANSLATION_HISTORY_37 FOREIGN KEY ([LANG_STMT5], [LANG_STMT5_VERSION]) REFERENCES [TRANSLATION_HISTORY]([TRANSLATION_ID], [MAPSEC_Version])  
GO
ALTER TABLE [ASD_HISTORY] ADD CONSTRAINT FK_ASD_HISTORYTRANSLATION_HISTORY_38 FOREIGN KEY ([LATEX_FREE_STMT], [LATEX_FREE_STMT_VERSION]) REFERENCES [TRANSLATION_HISTORY]([TRANSLATION_ID], [MAPSEC_Version])  
GO
ALTER TABLE [ASD_HISTORY] ADD CONSTRAINT FK_ASD_HISTORYTRANSLATION_HISTORY_39 FOREIGN KEY ([SAMP_TRIAL_STMT_190], [SAMP_TRIAL_STMT_190_VERSION]) REFERENCES [TRANSLATION_HISTORY]([TRANSLATION_ID], [MAPSEC_Version])  
GO
ALTER TABLE [ASD_HISTORY] ADD CONSTRAINT FK_ASD_HISTORYTRANSLATION_HISTORY_40 FOREIGN KEY ([SERIAL_PREFIX], [SERIAL_PREFIX_VERSION]) REFERENCES [TRANSLATION_HISTORY]([TRANSLATION_ID], [MAPSEC_Version])  
GO
ALTER TABLE [ASD_HISTORY] ADD CONSTRAINT FK_ASD_HISTORYTRANSLATION_HISTORY_41 FOREIGN KEY ([SIDE_STMT_180], [SIDE_STMT_180_VERSION]) REFERENCES [TRANSLATION_HISTORY]([TRANSLATION_ID], [MAPSEC_Version])  
GO
ALTER TABLE [ASD_HISTORY] ADD CONSTRAINT FK_ASD_HISTORYTRANSLATION_HISTORY_42 FOREIGN KEY ([SIZE_STMT_200], [SIZE_STMT_200_VERSION]) REFERENCES [TRANSLATION_HISTORY]([TRANSLATION_ID], [MAPSEC_Version])  
GO


CREATE UNIQUE INDEX IX_ASD_HISTORY_0 ON ASD_HISTORY (ITEM_NUMBER, MAPSEC_VERSION);
GO

ALTER TABLE ASD_HISTORY ADD CONSTRAINT CK_IX_ASD_HISTORY_0
 UNIQUE (ITEM_NUMBER, MAPSEC_VERSION)

GO

CREATE TABLE [ASD_WORKING]
(
[MAPSEC_ID] [uniqueidentifier] NOT NULL,
[MAPSEC_LIVEVERSION] [int] ,
[MAPSEC_CURRENTVERSION] [int] ,
[MAPSEC_ENABLED] [bit] 
);
-- Primary Key
ALTER TABLE [ASD_WORKING]
ADD CONSTRAINT PK_ASD_WORKING PRIMARY KEY ([MAPSEC_ID])
GO

-- Constraints


-- Foreign Keys


CREATE INDEX IX_ASD_WORKING_0 ON ASD_WORKING (MAPSEC_ID, MAPSEC_LIVEVERSION);
GO

GO

CREATE INDEX IX_ASD_WORKING_1 ON ASD_WORKING (MAPSEC_ID, MAPSEC_CURRENTVERSION);
GO

GO

CREATE VIEW ASD AS 
SELECT [ASD_HISTORY].[ITEM_NUMBER],
[ASD_HISTORY].[LABEL_SPEC_ID],
[ASD_HISTORY].[EXTRA_LABELS],
[ASD_HISTORY].[BASE_UOM],
[ASD_HISTORY].[SALES_UOM],
[ASD_HISTORY].[BATCH],
[ASD_HISTORY].[EXP_DATE],
[ASD_HISTORY].[FILTER_FIELD],
[ASD_HISTORY].[OT1],
[ASD_HISTORY].[OT1_QTY],
[ASD_HISTORY].[OT1_PKG_LVL],
[ASD_HISTORY].[OT2],
[ASD_HISTORY].[OT2_QTY],
[ASD_HISTORY].[OT2_PKG_LVL],
[ASD_HISTORY].[IN1],
[ASD_HISTORY].[IN1_QTY],
[ASD_HISTORY].[IN1_PKG_LVL],
[ASD_HISTORY].[IN2],
[ASD_HISTORY].[IN2_QTY],
[ASD_HISTORY].[IN2_PKG_LVL],
[ASD_HISTORY].[CS1],
[ASD_HISTORY].[CS1_QTY],
[ASD_HISTORY].[CS1_PKG_LVL],
[ASD_HISTORY].[CS2],
[ASD_HISTORY].[CS2_QTY],
[ASD_HISTORY].[CS2_PKG_LVL],
[ASD_HISTORY].[MS1],
[ASD_HISTORY].[MS1_QTY],
[ASD_HISTORY].[MS1_PKG_LVL],
[ASD_HISTORY].[MS2],
[ASD_HISTORY].[MS2_QTY],
[ASD_HISTORY].[MS2_PKG_LVL],
[ASD_HISTORY].[SAP_PLANT_NAME],
[ASD_HISTORY].[GTIN1],
[ASD_HISTORY].[GTIN1_UOM],
[ASD_HISTORY].[GTIN2],
[ASD_HISTORY].[GTIN2_UOM],
[ASD_HISTORY].[GTIN3],
[ASD_HISTORY].[GTIN3_UOM],
[ASD_HISTORY].[TRADE_NAME_160],
[ASD_HISTORY].[DES1_30],
[ASD_HISTORY].[DES2_40],
[ASD_HISTORY].[DES3_50],
[ASD_HISTORY].[DES4],
[ASD_HISTORY].[DES5],
[ASD_HISTORY].[DES6],
[ASD_HISTORY].[DIM1_10],
[ASD_HISTORY].[DIM2_20],
[ASD_HISTORY].[DIM3],
[ASD_HISTORY].[DIM4],
[ASD_HISTORY].[DIM5],
[ASD_HISTORY].[DIM6],
[ASD_HISTORY].[TEXT220],
[ASD_HISTORY].[TEXT230],
[ASD_HISTORY].[TEXT240],
[ASD_HISTORY].[TEXT250],
[ASD_HISTORY].[TEXT260],
[ASD_HISTORY].[TEXT270],
[ASD_HISTORY].[TEXT280],
[ASD_HISTORY].[TEXT290],
[ASD_HISTORY].[TEXT300],
[ASD_HISTORY].[TEXT310],
[ASD_HISTORY].[TEXT330],
[ASD_HISTORY].[TEXT340],
[ASD_HISTORY].[TEXT350],
[ASD_HISTORY].[TEXT360],
[ASD_HISTORY].[TEXT370],
[ASD_HISTORY].[TEXT380],
[ASD_HISTORY].[TEXT390],
[ASD_HISTORY].[TEXT400],
[ASD_HISTORY].[TEXT410],
[ASD_HISTORY].[TEXT420],
[ASD_HISTORY].[TEXT430],
[ASD_HISTORY].[TEXT440],
[ASD_HISTORY].[IS_SERIALIZED],
[ASD_HISTORY].[PATENT_NUM1],
[ASD_HISTORY].[PATENT_NUM2],
[ASD_HISTORY].[HUMIDITY_LMT_UPPER],
[ASD_HISTORY].[HUMIDITY_LMT_LOWER],
[ASD_HISTORY].[TEMP_LMT_LOWER],
[ASD_HISTORY].[TEMP_LMT_UPPER],
[ASD_HISTORY].[CE_APPROVED],
[ASD_HISTORY].[SHELF_LIFE],
[ASD_HISTORY].[SHELF_LIFE_UOM],
[ASD_HISTORY].[MFG_CODE],
[ASD_HISTORY].[COO],
[ASD_HISTORY].[COO_VERSION],
[ASD_HISTORY].[CO_ADDRESS1],
[ASD_HISTORY].[CO_ADDRESS1_VERSION],
[ASD_HISTORY].[CO_ADDRESS2],
[ASD_HISTORY].[CO_ADDRESS2_VERSION],
[ASD_HISTORY].[CO_ADDRESS3],
[ASD_HISTORY].[CO_ADDRESS3_VERSION],
[ASD_HISTORY].[PATENT_STMT],
[ASD_HISTORY].[PATENT_STMT_VERSION],
[ASD_HISTORY].[PHRASE1],
[ASD_HISTORY].[PHRASE1_VERSION],
[ASD_HISTORY].[PHRASE2],
[ASD_HISTORY].[PHRASE2_VERSION],
[ASD_HISTORY].[PHRASE3],
[ASD_HISTORY].[PHRASE3_VERSION],
[ASD_HISTORY].[PHRASE4],
[ASD_HISTORY].[PHRASE4_VERSION],
[ASD_HISTORY].[PHRASE5],
[ASD_HISTORY].[PHRASE5_VERSION],
[ASD_HISTORY].[COLOR1],
[ASD_HISTORY].[COLOR1_VERSION],
[ASD_HISTORY].[COLOR2],
[ASD_HISTORY].[COLOR2_VERSION],
[ASD_HISTORY].[COLOR3],
[ASD_HISTORY].[COLOR3_VERSION],
[ASD_HISTORY].[IMAGE1_170],
[ASD_HISTORY].[IMAGE1_170_VERSION],
[ASD_HISTORY].[IMAGE2],
[ASD_HISTORY].[IMAGE2_VERSION],
[ASD_HISTORY].[IMAGE3],
[ASD_HISTORY].[IMAGE3_VERSION],
[ASD_HISTORY].[IMAGE4],
[ASD_HISTORY].[IMAGE4_VERSION],
[ASD_HISTORY].[IMAGE5],
[ASD_HISTORY].[IMAGE5_VERSION],
[ASD_HISTORY].[IMAGE6],
[ASD_HISTORY].[IMAGE6_VERSION],
[ASD_HISTORY].[SYMBOL_CE],
[ASD_HISTORY].[SYMBOL_CE_VERSION],
[ASD_HISTORY].[SYMBOL_DARK_STORAGE],
[ASD_HISTORY].[SYMBOL_DARK_STORAGE_VERSION],
[ASD_HISTORY].[SYMBOL_DOM],
[ASD_HISTORY].[SYMBOL_DOM_VERSION],
[ASD_HISTORY].[SYMBOL_IFU],
[ASD_HISTORY].[SYMBOL_IFU_VERSION],
[ASD_HISTORY].[SYMBOL_KEEP_DRY],
[ASD_HISTORY].[SYMBOL_KEEP_DRY_VERSION],
[ASD_HISTORY].[SYMBOL_LATEX_FREE],
[ASD_HISTORY].[SYMBOL_LATEX_FREE_VERSION],
[ASD_HISTORY].[SYMBOL_RX],
[ASD_HISTORY].[SYMBOL_RX_VERSION],
[ASD_HISTORY].[SYMBOL_SINGLE_USE],
[ASD_HISTORY].[SYMBOL_SINGLE_USE_VERSION],
[ASD_HISTORY].[SYMBOL_STERILE_MTHD],
[ASD_HISTORY].[SYMBOL_STERILE_MTHD_VERSION],
[ASD_HISTORY].[SYMBOL_USER_DEF1],
[ASD_HISTORY].[SYMBOL_USER_DEF1_VERSION],
[ASD_HISTORY].[SYMBOL_USER_DEF2],
[ASD_HISTORY].[SYMBOL_USER_DEF2_VERSION],
[ASD_HISTORY].[SYMBOL_USER_DEF3],
[ASD_HISTORY].[SYMBOL_USER_DEF3_VERSION],
[ASD_HISTORY].[SYMBOL_USER_DEF4],
[ASD_HISTORY].[SYMBOL_USER_DEF4_VERSION],
[ASD_HISTORY].[SYMBOL_USER_DEF5],
[ASD_HISTORY].[SYMBOL_USER_DEF5_VERSION],
[ASD_HISTORY].[LANG_STMT1],
[ASD_HISTORY].[LANG_STMT1_VERSION],
[ASD_HISTORY].[LANG_STMT2],
[ASD_HISTORY].[LANG_STMT2_VERSION],
[ASD_HISTORY].[LANG_STMT3],
[ASD_HISTORY].[LANG_STMT3_VERSION],
[ASD_HISTORY].[LANG_STMT4],
[ASD_HISTORY].[LANG_STMT4_VERSION],
[ASD_HISTORY].[LANG_STMT5],
[ASD_HISTORY].[LANG_STMT5_VERSION],
[ASD_HISTORY].[LATEX_FREE_STMT],
[ASD_HISTORY].[LATEX_FREE_STMT_VERSION],
[ASD_HISTORY].[SAMP_TRIAL_STMT_190],
[ASD_HISTORY].[SAMP_TRIAL_STMT_190_VERSION],
[ASD_HISTORY].[SERIAL_PREFIX],
[ASD_HISTORY].[SERIAL_PREFIX_VERSION],
[ASD_HISTORY].[SIDE_STMT_180],
[ASD_HISTORY].[SIDE_STMT_180_VERSION],
[ASD_HISTORY].[SIZE_STMT_200],
[ASD_HISTORY].[SIZE_STMT_200_VERSION],
[ASD_HISTORY].[MAPSEC_ID]
FROM ASD_HISTORY JOIN ASD_WORKING ON [ASD_HISTORY].[MAPSEC_ID] = [ASD_WORKING].[MAPSEC_ID] AND [ASD_HISTORY].[MAPSEC_VERSION] = [ASD_WORKING].[MAPSEC_LIVEVERSION]
WHERE [ASD_WORKING].[MAPSEC_ENABLED] = 1;
GO

CREATE VIEW ASD_CURRENT AS 
SELECT [ASD_HISTORY].[ITEM_NUMBER],
[ASD_HISTORY].[LABEL_SPEC_ID],
[ASD_HISTORY].[EXTRA_LABELS],
[ASD_HISTORY].[BASE_UOM],
[ASD_HISTORY].[SALES_UOM],
[ASD_HISTORY].[BATCH],
[ASD_HISTORY].[EXP_DATE],
[ASD_HISTORY].[FILTER_FIELD],
[ASD_HISTORY].[OT1],
[ASD_HISTORY].[OT1_QTY],
[ASD_HISTORY].[OT1_PKG_LVL],
[ASD_HISTORY].[OT2],
[ASD_HISTORY].[OT2_QTY],
[ASD_HISTORY].[OT2_PKG_LVL],
[ASD_HISTORY].[IN1],
[ASD_HISTORY].[IN1_QTY],
[ASD_HISTORY].[IN1_PKG_LVL],
[ASD_HISTORY].[IN2],
[ASD_HISTORY].[IN2_QTY],
[ASD_HISTORY].[IN2_PKG_LVL],
[ASD_HISTORY].[CS1],
[ASD_HISTORY].[CS1_QTY],
[ASD_HISTORY].[CS1_PKG_LVL],
[ASD_HISTORY].[CS2],
[ASD_HISTORY].[CS2_QTY],
[ASD_HISTORY].[CS2_PKG_LVL],
[ASD_HISTORY].[MS1],
[ASD_HISTORY].[MS1_QTY],
[ASD_HISTORY].[MS1_PKG_LVL],
[ASD_HISTORY].[MS2],
[ASD_HISTORY].[MS2_QTY],
[ASD_HISTORY].[MS2_PKG_LVL],
[ASD_HISTORY].[SAP_PLANT_NAME],
[ASD_HISTORY].[GTIN1],
[ASD_HISTORY].[GTIN1_UOM],
[ASD_HISTORY].[GTIN2],
[ASD_HISTORY].[GTIN2_UOM],
[ASD_HISTORY].[GTIN3],
[ASD_HISTORY].[GTIN3_UOM],
[ASD_HISTORY].[TRADE_NAME_160],
[ASD_HISTORY].[DES1_30],
[ASD_HISTORY].[DES2_40],
[ASD_HISTORY].[DES3_50],
[ASD_HISTORY].[DES4],
[ASD_HISTORY].[DES5],
[ASD_HISTORY].[DES6],
[ASD_HISTORY].[DIM1_10],
[ASD_HISTORY].[DIM2_20],
[ASD_HISTORY].[DIM3],
[ASD_HISTORY].[DIM4],
[ASD_HISTORY].[DIM5],
[ASD_HISTORY].[DIM6],
[ASD_HISTORY].[TEXT220],
[ASD_HISTORY].[TEXT230],
[ASD_HISTORY].[TEXT240],
[ASD_HISTORY].[TEXT250],
[ASD_HISTORY].[TEXT260],
[ASD_HISTORY].[TEXT270],
[ASD_HISTORY].[TEXT280],
[ASD_HISTORY].[TEXT290],
[ASD_HISTORY].[TEXT300],
[ASD_HISTORY].[TEXT310],
[ASD_HISTORY].[TEXT330],
[ASD_HISTORY].[TEXT340],
[ASD_HISTORY].[TEXT350],
[ASD_HISTORY].[TEXT360],
[ASD_HISTORY].[TEXT370],
[ASD_HISTORY].[TEXT380],
[ASD_HISTORY].[TEXT390],
[ASD_HISTORY].[TEXT400],
[ASD_HISTORY].[TEXT410],
[ASD_HISTORY].[TEXT420],
[ASD_HISTORY].[TEXT430],
[ASD_HISTORY].[TEXT440],
[ASD_HISTORY].[IS_SERIALIZED],
[ASD_HISTORY].[PATENT_NUM1],
[ASD_HISTORY].[PATENT_NUM2],
[ASD_HISTORY].[HUMIDITY_LMT_UPPER],
[ASD_HISTORY].[HUMIDITY_LMT_LOWER],
[ASD_HISTORY].[TEMP_LMT_LOWER],
[ASD_HISTORY].[TEMP_LMT_UPPER],
[ASD_HISTORY].[CE_APPROVED],
[ASD_HISTORY].[SHELF_LIFE],
[ASD_HISTORY].[SHELF_LIFE_UOM],
[ASD_HISTORY].[MFG_CODE],
[ASD_HISTORY].[COO],
[ASD_HISTORY].[COO_VERSION],
[ASD_HISTORY].[CO_ADDRESS1],
[ASD_HISTORY].[CO_ADDRESS1_VERSION],
[ASD_HISTORY].[CO_ADDRESS2],
[ASD_HISTORY].[CO_ADDRESS2_VERSION],
[ASD_HISTORY].[CO_ADDRESS3],
[ASD_HISTORY].[CO_ADDRESS3_VERSION],
[ASD_HISTORY].[PATENT_STMT],
[ASD_HISTORY].[PATENT_STMT_VERSION],
[ASD_HISTORY].[PHRASE1],
[ASD_HISTORY].[PHRASE1_VERSION],
[ASD_HISTORY].[PHRASE2],
[ASD_HISTORY].[PHRASE2_VERSION],
[ASD_HISTORY].[PHRASE3],
[ASD_HISTORY].[PHRASE3_VERSION],
[ASD_HISTORY].[PHRASE4],
[ASD_HISTORY].[PHRASE4_VERSION],
[ASD_HISTORY].[PHRASE5],
[ASD_HISTORY].[PHRASE5_VERSION],
[ASD_HISTORY].[COLOR1],
[ASD_HISTORY].[COLOR1_VERSION],
[ASD_HISTORY].[COLOR2],
[ASD_HISTORY].[COLOR2_VERSION],
[ASD_HISTORY].[COLOR3],
[ASD_HISTORY].[COLOR3_VERSION],
[ASD_HISTORY].[IMAGE1_170],
[ASD_HISTORY].[IMAGE1_170_VERSION],
[ASD_HISTORY].[IMAGE2],
[ASD_HISTORY].[IMAGE2_VERSION],
[ASD_HISTORY].[IMAGE3],
[ASD_HISTORY].[IMAGE3_VERSION],
[ASD_HISTORY].[IMAGE4],
[ASD_HISTORY].[IMAGE4_VERSION],
[ASD_HISTORY].[IMAGE5],
[ASD_HISTORY].[IMAGE5_VERSION],
[ASD_HISTORY].[IMAGE6],
[ASD_HISTORY].[IMAGE6_VERSION],
[ASD_HISTORY].[SYMBOL_CE],
[ASD_HISTORY].[SYMBOL_CE_VERSION],
[ASD_HISTORY].[SYMBOL_DARK_STORAGE],
[ASD_HISTORY].[SYMBOL_DARK_STORAGE_VERSION],
[ASD_HISTORY].[SYMBOL_DOM],
[ASD_HISTORY].[SYMBOL_DOM_VERSION],
[ASD_HISTORY].[SYMBOL_IFU],
[ASD_HISTORY].[SYMBOL_IFU_VERSION],
[ASD_HISTORY].[SYMBOL_KEEP_DRY],
[ASD_HISTORY].[SYMBOL_KEEP_DRY_VERSION],
[ASD_HISTORY].[SYMBOL_LATEX_FREE],
[ASD_HISTORY].[SYMBOL_LATEX_FREE_VERSION],
[ASD_HISTORY].[SYMBOL_RX],
[ASD_HISTORY].[SYMBOL_RX_VERSION],
[ASD_HISTORY].[SYMBOL_SINGLE_USE],
[ASD_HISTORY].[SYMBOL_SINGLE_USE_VERSION],
[ASD_HISTORY].[SYMBOL_STERILE_MTHD],
[ASD_HISTORY].[SYMBOL_STERILE_MTHD_VERSION],
[ASD_HISTORY].[SYMBOL_USER_DEF1],
[ASD_HISTORY].[SYMBOL_USER_DEF1_VERSION],
[ASD_HISTORY].[SYMBOL_USER_DEF2],
[ASD_HISTORY].[SYMBOL_USER_DEF2_VERSION],
[ASD_HISTORY].[SYMBOL_USER_DEF3],
[ASD_HISTORY].[SYMBOL_USER_DEF3_VERSION],
[ASD_HISTORY].[SYMBOL_USER_DEF4],
[ASD_HISTORY].[SYMBOL_USER_DEF4_VERSION],
[ASD_HISTORY].[SYMBOL_USER_DEF5],
[ASD_HISTORY].[SYMBOL_USER_DEF5_VERSION],
[ASD_HISTORY].[LANG_STMT1],
[ASD_HISTORY].[LANG_STMT1_VERSION],
[ASD_HISTORY].[LANG_STMT2],
[ASD_HISTORY].[LANG_STMT2_VERSION],
[ASD_HISTORY].[LANG_STMT3],
[ASD_HISTORY].[LANG_STMT3_VERSION],
[ASD_HISTORY].[LANG_STMT4],
[ASD_HISTORY].[LANG_STMT4_VERSION],
[ASD_HISTORY].[LANG_STMT5],
[ASD_HISTORY].[LANG_STMT5_VERSION],
[ASD_HISTORY].[LATEX_FREE_STMT],
[ASD_HISTORY].[LATEX_FREE_STMT_VERSION],
[ASD_HISTORY].[SAMP_TRIAL_STMT_190],
[ASD_HISTORY].[SAMP_TRIAL_STMT_190_VERSION],
[ASD_HISTORY].[SERIAL_PREFIX],
[ASD_HISTORY].[SERIAL_PREFIX_VERSION],
[ASD_HISTORY].[SIDE_STMT_180],
[ASD_HISTORY].[SIDE_STMT_180_VERSION],
[ASD_HISTORY].[SIZE_STMT_200],
[ASD_HISTORY].[SIZE_STMT_200_VERSION],
[ASD_HISTORY].[MAPSEC_ID]
FROM ASD_HISTORY JOIN ASD_WORKING ON [ASD_HISTORY].[MAPSEC_ID] = [ASD_WORKING].[MAPSEC_ID] AND [ASD_HISTORY].[MAPSEC_VERSION] = [ASD_WORKING].[MAPSEC_CURRENTVERSION]
WHERE [ASD_WORKING].[MAPSEC_ENABLED] = 1;
GO


-- EXPRESS_IMPLANT
IF (EXISTS (SELECT * 
                 FROM INFORMATION_SCHEMA.TABLES 
                 WHERE TABLE_NAME = 'EXPRESS_IMPLANT_HISTORY'))
BEGIN
    DROP TABLE EXPRESS_IMPLANT_HISTORY;
END
GO

IF (EXISTS (SELECT * 
                 FROM INFORMATION_SCHEMA.TABLES 
                 WHERE TABLE_NAME = 'EXPRESS_IMPLANT_WORKING'))
BEGIN
    DROP TABLE EXPRESS_IMPLANT_WORKING;
END
GO

IF (EXISTS (SELECT * 
                 FROM INFORMATION_SCHEMA.VIEWS
                 WHERE TABLE_NAME = 'EXPRESS_IMPLANT'))
BEGIN
    DROP VIEW EXPRESS_IMPLANT;
END
GO

IF (EXISTS (SELECT * 
                 FROM INFORMATION_SCHEMA.VIEWS
                 WHERE TABLE_NAME = 'EXPRESS_IMPLANT_CURRENT'))
BEGIN
    DROP VIEW EXPRESS_IMPLANT_CURRENT;
END
GO

CREATE TABLE [EXPRESS_IMPLANT_HISTORY]
(
[EITEM_NUMBER_VCASENUMBER] [nvarchar](30) NOT NULL,
[PRINT_QTY] [int] ,
[EXP_DATE] [datetime] ,
[COO] [nvarchar](3) ,
[COO_VERSION] [int] ,
[SYMBOL_SINGLE_USE] [nvarchar](30) ,
[SYMBOL_SINGLE_USE_VERSION] [int] ,
[SYMBOL_IFU] [nvarchar](30) ,
[SYMBOL_IFU_VERSION] [int] ,
[SYMBOL_CE] [nvarchar](30) ,
[SYMBOL_CE_VERSION] [int] ,
[SYMBOL_STERILE_MTHD] [nvarchar](30) ,
[SYMBOL_STERILE_MTHD_VERSION] [int] ,
[SHELF_LIFE] [nvarchar](50) ,
[SHELF_LIFE_UOM] [nvarchar](50) ,
[CO_ADDRESS1] [nvarchar](30) ,
[CO_ADDRESS1_VERSION] [int] ,
[CO_ADDRESS2] [nvarchar](30) ,
[CO_ADDRESS2_VERSION] [int] ,
[CO_ADDRESS3] [nvarchar](30) ,
[CO_ADDRESS3_VERSION] [int] ,
[DES1] [nvarchar](50) ,
[DES2] [nvarchar](50) ,
[PATIENT_NAME] [nvarchar](255) ,
[MATERIAL] [nvarchar](255) ,
[VITEM_NUMBER] [nvarchar](30) ,
[TEXT1] [nvarchar](255) ,
[TEXT2] [nvarchar](255) ,
[SYMBOL_RX] [nvarchar](30) ,
[SYMBOL_RX_VERSION] [int] ,
[FORMAT1] [nvarchar](50) ,
[FORMAT2] [nvarchar](50) ,
[MAPSEC_ID] [uniqueidentifier] NOT NULL,
[MAPSEC_VERSION] [int] NOT NULL,
[MAPSEC_VERSION_Enabled] [bit] NOT NULL,
[MAPSEC_DES_USERID] [nvarchar](64) NOT NULL,
[MAPSEC_DES_USERNAME] [nvarchar](100) NOT NULL,
[MAPSEC_DES_MACHINE] [nvarchar](100) NOT NULL,
[MAPSEC_DES_TIMEDATE] [datetime] NOT NULL,
[MAPSEC_DES_COMMENT] [nvarchar](255) NOT NULL,
[MAPSEC_PEND_USERID] [nvarchar](64) ,
[MAPSEC_PEND_USERNAME] [nvarchar](100) ,
[MAPSEC_PEND_MACHINE] [nvarchar](100) ,
[MAPSEC_PEND_TIMEDATE] [datetime] ,
[MAPSEC_PEND_COMMENT] [nvarchar](255) ,
[MAPSEC_APPRV_USERID] [nvarchar](64) ,
[MAPSEC_APPRV_USERNAME] [nvarchar](100) ,
[MAPSEC_APPRV_MACHINE] [nvarchar](100) ,
[MAPSEC_APPRV_TIMEDATE] [datetime] ,
[MAPSEC_APPRV_COMMENT] [nvarchar](255) 
);
-- Primary Key
ALTER TABLE [EXPRESS_IMPLANT_HISTORY]
ADD CONSTRAINT PK_EXPRESS_IMPLANT_HISTORY PRIMARY KEY ([MAPSEC_ID], [MAPSEC_VERSION])
GO

-- Constraints
ALTER TABLE [EXPRESS_IMPLANT_HISTORY] ADD CONSTRAINT CK_EXPRESS_IMPLANT_HISTORY_0 CHECK ((COO IS NULL AND COO_VERSION IS NULL) OR (COO IS NOT NULL AND COO_VERSION IS NOT NULL))ALTER TABLE [EXPRESS_IMPLANT_HISTORY] ADD CONSTRAINT CK_EXPRESS_IMPLANT_HISTORY_1 CHECK ((SYMBOL_SINGLE_USE IS NULL AND SYMBOL_SINGLE_USE_VERSION IS NULL) OR (SYMBOL_SINGLE_USE IS NOT NULL AND SYMBOL_SINGLE_USE_VERSION IS NOT NULL))ALTER TABLE [EXPRESS_IMPLANT_HISTORY] ADD CONSTRAINT CK_EXPRESS_IMPLANT_HISTORY_2 CHECK ((SYMBOL_IFU IS NULL AND SYMBOL_IFU_VERSION IS NULL) OR (SYMBOL_IFU IS NOT NULL AND SYMBOL_IFU_VERSION IS NOT NULL))ALTER TABLE [EXPRESS_IMPLANT_HISTORY] ADD CONSTRAINT CK_EXPRESS_IMPLANT_HISTORY_3 CHECK ((SYMBOL_CE IS NULL AND SYMBOL_CE_VERSION IS NULL) OR (SYMBOL_CE IS NOT NULL AND SYMBOL_CE_VERSION IS NOT NULL))ALTER TABLE [EXPRESS_IMPLANT_HISTORY] ADD CONSTRAINT CK_EXPRESS_IMPLANT_HISTORY_4 CHECK ((SYMBOL_STERILE_MTHD IS NULL AND SYMBOL_STERILE_MTHD_VERSION IS NULL) OR (SYMBOL_STERILE_MTHD IS NOT NULL AND SYMBOL_STERILE_MTHD_VERSION IS NOT NULL))ALTER TABLE [EXPRESS_IMPLANT_HISTORY] ADD CONSTRAINT CK_EXPRESS_IMPLANT_HISTORY_5 CHECK ((CO_ADDRESS1 IS NULL AND CO_ADDRESS1_VERSION IS NULL) OR (CO_ADDRESS1 IS NOT NULL AND CO_ADDRESS1_VERSION IS NOT NULL))ALTER TABLE [EXPRESS_IMPLANT_HISTORY] ADD CONSTRAINT CK_EXPRESS_IMPLANT_HISTORY_6 CHECK ((CO_ADDRESS2 IS NULL AND CO_ADDRESS2_VERSION IS NULL) OR (CO_ADDRESS2 IS NOT NULL AND CO_ADDRESS2_VERSION IS NOT NULL))ALTER TABLE [EXPRESS_IMPLANT_HISTORY] ADD CONSTRAINT CK_EXPRESS_IMPLANT_HISTORY_7 CHECK ((CO_ADDRESS3 IS NULL AND CO_ADDRESS3_VERSION IS NULL) OR (CO_ADDRESS3 IS NOT NULL AND CO_ADDRESS3_VERSION IS NOT NULL))ALTER TABLE [EXPRESS_IMPLANT_HISTORY] ADD CONSTRAINT CK_EXPRESS_IMPLANT_HISTORY_8 CHECK ((SYMBOL_RX IS NULL AND SYMBOL_RX_VERSION IS NULL) OR (SYMBOL_RX IS NOT NULL AND SYMBOL_RX_VERSION IS NOT NULL))

-- Foreign Keys
ALTER TABLE [EXPRESS_IMPLANT_HISTORY] ADD CONSTRAINT FK_EXPRESS_IMPLANT_HISTORYCOUNTRY_HISTORY_0 FOREIGN KEY ([COO], [COO_VERSION]) REFERENCES [COUNTRY_HISTORY]([COUNTRY_ID], [MAPSEC_Version])  
GO
ALTER TABLE [EXPRESS_IMPLANT_HISTORY] ADD CONSTRAINT FK_EXPRESS_IMPLANT_HISTORYIMAGE_HISTORY_1 FOREIGN KEY ([SYMBOL_SINGLE_USE], [SYMBOL_SINGLE_USE_VERSION]) REFERENCES [IMAGE_HISTORY]([IMAGE_ID], [MAPSEC_Version])  
GO
ALTER TABLE [EXPRESS_IMPLANT_HISTORY] ADD CONSTRAINT FK_EXPRESS_IMPLANT_HISTORYIMAGE_HISTORY_2 FOREIGN KEY ([SYMBOL_IFU], [SYMBOL_IFU_VERSION]) REFERENCES [IMAGE_HISTORY]([IMAGE_ID], [MAPSEC_Version])  
GO
ALTER TABLE [EXPRESS_IMPLANT_HISTORY] ADD CONSTRAINT FK_EXPRESS_IMPLANT_HISTORYIMAGE_HISTORY_3 FOREIGN KEY ([SYMBOL_CE], [SYMBOL_CE_VERSION]) REFERENCES [IMAGE_HISTORY]([IMAGE_ID], [MAPSEC_Version])  
GO
ALTER TABLE [EXPRESS_IMPLANT_HISTORY] ADD CONSTRAINT FK_EXPRESS_IMPLANT_HISTORYIMAGE_HISTORY_4 FOREIGN KEY ([SYMBOL_STERILE_MTHD], [SYMBOL_STERILE_MTHD_VERSION]) REFERENCES [IMAGE_HISTORY]([IMAGE_ID], [MAPSEC_Version])  
GO
ALTER TABLE [EXPRESS_IMPLANT_HISTORY] ADD CONSTRAINT FK_EXPRESS_IMPLANT_HISTORYSTATEMENT_HISTORY_5 FOREIGN KEY ([CO_ADDRESS1], [CO_ADDRESS1_VERSION]) REFERENCES [STATEMENT_HISTORY]([STATEMENT_ID], [MAPSEC_Version])  
GO
ALTER TABLE [EXPRESS_IMPLANT_HISTORY] ADD CONSTRAINT FK_EXPRESS_IMPLANT_HISTORYSTATEMENT_HISTORY_6 FOREIGN KEY ([CO_ADDRESS2], [CO_ADDRESS2_VERSION]) REFERENCES [STATEMENT_HISTORY]([STATEMENT_ID], [MAPSEC_Version])  
GO
ALTER TABLE [EXPRESS_IMPLANT_HISTORY] ADD CONSTRAINT FK_EXPRESS_IMPLANT_HISTORYSTATEMENT_HISTORY_7 FOREIGN KEY ([CO_ADDRESS3], [CO_ADDRESS3_VERSION]) REFERENCES [STATEMENT_HISTORY]([STATEMENT_ID], [MAPSEC_Version])  
GO
ALTER TABLE [EXPRESS_IMPLANT_HISTORY] ADD CONSTRAINT FK_EXPRESS_IMPLANT_HISTORYIMAGE_HISTORY_8 FOREIGN KEY ([SYMBOL_RX], [SYMBOL_RX_VERSION]) REFERENCES [IMAGE_HISTORY]([IMAGE_ID], [MAPSEC_Version])  
GO


CREATE UNIQUE INDEX IX_EXPRESS_IMPLANT_HISTORY_0 ON EXPRESS_IMPLANT_HISTORY (EITEM_NUMBER_VCASENUMBER, MAPSEC_VERSION);
GO

ALTER TABLE EXPRESS_IMPLANT_HISTORY ADD CONSTRAINT CK_IX_EXPRESS_IMPLANT_HISTORY_0
 UNIQUE (EITEM_NUMBER_VCASENUMBER, MAPSEC_VERSION)

GO

CREATE TABLE [EXPRESS_IMPLANT_WORKING]
(
[MAPSEC_ID] [uniqueidentifier] NOT NULL,
[MAPSEC_LIVEVERSION] [int] ,
[MAPSEC_CURRENTVERSION] [int] ,
[MAPSEC_ENABLED] [bit] 
);
-- Primary Key
ALTER TABLE [EXPRESS_IMPLANT_WORKING]
ADD CONSTRAINT PK_EXPRESS_IMPLANT_WORKING PRIMARY KEY ([MAPSEC_ID])
GO

-- Constraints


-- Foreign Keys


CREATE INDEX IX_EXPRESS_IMPLANT_WORKING_0 ON EXPRESS_IMPLANT_WORKING (MAPSEC_ID, MAPSEC_LIVEVERSION);
GO

GO

CREATE INDEX IX_EXPRESS_IMPLANT_WORKING_1 ON EXPRESS_IMPLANT_WORKING (MAPSEC_ID, MAPSEC_CURRENTVERSION);
GO

GO

CREATE VIEW EXPRESS_IMPLANT AS 
SELECT [EXPRESS_IMPLANT_HISTORY].[EITEM_NUMBER_VCASENUMBER],
[EXPRESS_IMPLANT_HISTORY].[PRINT_QTY],
[EXPRESS_IMPLANT_HISTORY].[EXP_DATE],
[EXPRESS_IMPLANT_HISTORY].[COO],
[EXPRESS_IMPLANT_HISTORY].[COO_VERSION],
[EXPRESS_IMPLANT_HISTORY].[SYMBOL_SINGLE_USE],
[EXPRESS_IMPLANT_HISTORY].[SYMBOL_SINGLE_USE_VERSION],
[EXPRESS_IMPLANT_HISTORY].[SYMBOL_IFU],
[EXPRESS_IMPLANT_HISTORY].[SYMBOL_IFU_VERSION],
[EXPRESS_IMPLANT_HISTORY].[SYMBOL_CE],
[EXPRESS_IMPLANT_HISTORY].[SYMBOL_CE_VERSION],
[EXPRESS_IMPLANT_HISTORY].[SYMBOL_STERILE_MTHD],
[EXPRESS_IMPLANT_HISTORY].[SYMBOL_STERILE_MTHD_VERSION],
[EXPRESS_IMPLANT_HISTORY].[SHELF_LIFE],
[EXPRESS_IMPLANT_HISTORY].[SHELF_LIFE_UOM],
[EXPRESS_IMPLANT_HISTORY].[CO_ADDRESS1],
[EXPRESS_IMPLANT_HISTORY].[CO_ADDRESS1_VERSION],
[EXPRESS_IMPLANT_HISTORY].[CO_ADDRESS2],
[EXPRESS_IMPLANT_HISTORY].[CO_ADDRESS2_VERSION],
[EXPRESS_IMPLANT_HISTORY].[CO_ADDRESS3],
[EXPRESS_IMPLANT_HISTORY].[CO_ADDRESS3_VERSION],
[EXPRESS_IMPLANT_HISTORY].[DES1],
[EXPRESS_IMPLANT_HISTORY].[DES2],
[EXPRESS_IMPLANT_HISTORY].[PATIENT_NAME],
[EXPRESS_IMPLANT_HISTORY].[MATERIAL],
[EXPRESS_IMPLANT_HISTORY].[VITEM_NUMBER],
[EXPRESS_IMPLANT_HISTORY].[TEXT1],
[EXPRESS_IMPLANT_HISTORY].[TEXT2],
[EXPRESS_IMPLANT_HISTORY].[SYMBOL_RX],
[EXPRESS_IMPLANT_HISTORY].[SYMBOL_RX_VERSION],
[EXPRESS_IMPLANT_HISTORY].[FORMAT1],
[EXPRESS_IMPLANT_HISTORY].[FORMAT2],
[EXPRESS_IMPLANT_HISTORY].[MAPSEC_ID]
FROM EXPRESS_IMPLANT_HISTORY JOIN EXPRESS_IMPLANT_WORKING ON [EXPRESS_IMPLANT_HISTORY].[MAPSEC_ID] = [EXPRESS_IMPLANT_WORKING].[MAPSEC_ID] AND [EXPRESS_IMPLANT_HISTORY].[MAPSEC_VERSION] = [EXPRESS_IMPLANT_WORKING].[MAPSEC_LIVEVERSION]
WHERE [EXPRESS_IMPLANT_WORKING].[MAPSEC_ENABLED] = 1;
GO

CREATE VIEW EXPRESS_IMPLANT_CURRENT AS 
SELECT [EXPRESS_IMPLANT_HISTORY].[EITEM_NUMBER_VCASENUMBER],
[EXPRESS_IMPLANT_HISTORY].[PRINT_QTY],
[EXPRESS_IMPLANT_HISTORY].[EXP_DATE],
[EXPRESS_IMPLANT_HISTORY].[COO],
[EXPRESS_IMPLANT_HISTORY].[COO_VERSION],
[EXPRESS_IMPLANT_HISTORY].[SYMBOL_SINGLE_USE],
[EXPRESS_IMPLANT_HISTORY].[SYMBOL_SINGLE_USE_VERSION],
[EXPRESS_IMPLANT_HISTORY].[SYMBOL_IFU],
[EXPRESS_IMPLANT_HISTORY].[SYMBOL_IFU_VERSION],
[EXPRESS_IMPLANT_HISTORY].[SYMBOL_CE],
[EXPRESS_IMPLANT_HISTORY].[SYMBOL_CE_VERSION],
[EXPRESS_IMPLANT_HISTORY].[SYMBOL_STERILE_MTHD],
[EXPRESS_IMPLANT_HISTORY].[SYMBOL_STERILE_MTHD_VERSION],
[EXPRESS_IMPLANT_HISTORY].[SHELF_LIFE],
[EXPRESS_IMPLANT_HISTORY].[SHELF_LIFE_UOM],
[EXPRESS_IMPLANT_HISTORY].[CO_ADDRESS1],
[EXPRESS_IMPLANT_HISTORY].[CO_ADDRESS1_VERSION],
[EXPRESS_IMPLANT_HISTORY].[CO_ADDRESS2],
[EXPRESS_IMPLANT_HISTORY].[CO_ADDRESS2_VERSION],
[EXPRESS_IMPLANT_HISTORY].[CO_ADDRESS3],
[EXPRESS_IMPLANT_HISTORY].[CO_ADDRESS3_VERSION],
[EXPRESS_IMPLANT_HISTORY].[DES1],
[EXPRESS_IMPLANT_HISTORY].[DES2],
[EXPRESS_IMPLANT_HISTORY].[PATIENT_NAME],
[EXPRESS_IMPLANT_HISTORY].[MATERIAL],
[EXPRESS_IMPLANT_HISTORY].[VITEM_NUMBER],
[EXPRESS_IMPLANT_HISTORY].[TEXT1],
[EXPRESS_IMPLANT_HISTORY].[TEXT2],
[EXPRESS_IMPLANT_HISTORY].[SYMBOL_RX],
[EXPRESS_IMPLANT_HISTORY].[SYMBOL_RX_VERSION],
[EXPRESS_IMPLANT_HISTORY].[FORMAT1],
[EXPRESS_IMPLANT_HISTORY].[FORMAT2],
[EXPRESS_IMPLANT_HISTORY].[MAPSEC_ID]
FROM EXPRESS_IMPLANT_HISTORY JOIN EXPRESS_IMPLANT_WORKING ON [EXPRESS_IMPLANT_HISTORY].[MAPSEC_ID] = [EXPRESS_IMPLANT_WORKING].[MAPSEC_ID] AND [EXPRESS_IMPLANT_HISTORY].[MAPSEC_VERSION] = [EXPRESS_IMPLANT_WORKING].[MAPSEC_CURRENTVERSION]
WHERE [EXPRESS_IMPLANT_WORKING].[MAPSEC_ENABLED] = 1;
GO


-- CHINA
IF (EXISTS (SELECT * 
                 FROM INFORMATION_SCHEMA.TABLES 
                 WHERE TABLE_NAME = 'CHINA_HISTORY'))
BEGIN
    DROP TABLE CHINA_HISTORY;
END
GO

IF (EXISTS (SELECT * 
                 FROM INFORMATION_SCHEMA.TABLES 
                 WHERE TABLE_NAME = 'CHINA_WORKING'))
BEGIN
    DROP TABLE CHINA_WORKING;
END
GO

IF (EXISTS (SELECT * 
                 FROM INFORMATION_SCHEMA.VIEWS
                 WHERE TABLE_NAME = 'CHINA'))
BEGIN
    DROP VIEW CHINA;
END
GO

IF (EXISTS (SELECT * 
                 FROM INFORMATION_SCHEMA.VIEWS
                 WHERE TABLE_NAME = 'CHINA_CURRENT'))
BEGIN
    DROP VIEW CHINA_CURRENT;
END
GO

CREATE TABLE [CHINA_HISTORY]
(
[ITEM_NUMBER] [nvarchar](50) NOT NULL,
[LABEL_SPEC_ID] [nvarchar](30) ,
[FILTER_FIELD] [nvarchar](50) ,
[EXTRA_LABELS] [nvarchar](50) ,
[OT1] [nvarchar](50) ,
[OT1_QTY] [int] ,
[OT1_PKG_LVL] [int] ,
[OT2] [nvarchar](50) ,
[OT2_QTY] [int] ,
[OT2_PKG_LVL] [int] ,
[IN1] [nvarchar](50) ,
[IN1_QTY] [int] ,
[IN1_PKG_LVL] [int] ,
[IN2] [nvarchar](50) ,
[IN2_QTY] [int] ,
[IN2_PKG_LVL] [int] ,
[CS1] [nvarchar](50) ,
[CS1_QTY] [int] ,
[CS1_PKG_LVL] [int] ,
[CS2] [nvarchar](50) ,
[CS2_QTY] [int] ,
[CS2_PKG_LVL] [int] ,
[MS1] [nvarchar](50) ,
[MS1_QTY] [int] ,
[MS1_PKG_LVL] [int] ,
[MS2] [nvarchar](50) ,
[MS2_QTY] [int] ,
[MS2_PKG_LVL] [int] ,
[BATCH] [nvarchar](50) ,
[EXP_DATE] [datetime] ,
[REFERENCE_DESCRIPTION] [nvarchar](50) ,
[STANDARD_NUMBER] [nvarchar](50) ,
[CERTIFICATE_NUMBER] [nvarchar](50) ,
[ARTICLE_NUMBER] [nvarchar](50) ,
[BASE_UOM] [nvarchar](50) ,
[SALES_UOM] [nvarchar](50) ,
[SAP_PLANT] [nvarchar](50) ,
[COMPANY_NAME] [nvarchar](50) ,
[COO] [nvarchar](3) ,
[COO_VERSION] [int] ,
[GTIN1] [nvarchar](50) ,
[GTIN1_UOM] [nvarchar](50) ,
[GTIN2] [nvarchar](50) ,
[GTIN2_UOM] [nvarchar](50) ,
[GTIN3] [nvarchar](50) ,
[GTIN3_UOM] [nvarchar](50) ,
[HIBC_CNTRL_NUMBER] [nvarchar](50) ,
[TRADE_NAME] [nvarchar](50) ,
[MATERIAL] [nvarchar](50) ,
[DES1] [nvarchar](50) ,
[DES2] [nvarchar](50) ,
[DES3] [nvarchar](50) ,
[DES4] [nvarchar](50) ,
[DES5] [nvarchar](50) ,
[DES6] [nvarchar](50) ,
[DES7] [nvarchar](50) ,
[DIM1] [nvarchar](50) ,
[DIM2] [nvarchar](50) ,
[DIM3] [nvarchar](50) ,
[DIM4] [nvarchar](50) ,
[DIM5] [nvarchar](50) ,
[DIM6] [nvarchar](50) ,
[TEXT1] [nvarchar](50) ,
[TEXT2] [nvarchar](50) ,
[TEXT3] [nvarchar](50) ,
[TEXT4] [nvarchar](50) ,
[TEXT5] [nvarchar](50) ,
[is serialized] [nvarchar](1) ,
[CE_APPROVED] [nvarchar](50) ,
[SYMBOL_CE] [nvarchar](30) ,
[SYMBOL_CE_VERSION] [int] ,
[SYMBOL_STERILE_MTHD] [nvarchar](30) ,
[SYMBOL_STERILE_MTHD_VERSION] [int] ,
[SHELF_LIFE] [nvarchar](50) ,
[SHELF_LIFE_UOM] [nvarchar](50) ,
[SYMBOL_IFU] [nvarchar](30) ,
[SYMBOL_IFU_VERSION] [int] ,
[SYMBOL_SINGLE_USE] [nvarchar](30) ,
[SYMBOL_SINGLE_USE_VERSION] [int] ,
[SYMBOL_USER_DEF1] [nvarchar](30) ,
[SYMBOL_USER_DEF1_VERSION] [int] ,
[SYMBOL_USER_DEF2] [nvarchar](30) ,
[SYMBOL_USER_DEF2_VERSION] [int] ,
[SYMBOL_USER_DEF3] [nvarchar](30) ,
[SYMBOL_USER_DEF3_VERSION] [int] ,
[SYMBOL_USER_DEF4] [nvarchar](30) ,
[SYMBOL_USER_DEF4_VERSION] [int] ,
[SYMBOL_USER_DEF5] [nvarchar](30) ,
[SYMBOL_USER_DEF5_VERSION] [int] ,
[IMAGE1] [nvarchar](30) ,
[IMAGE1_VERSION] [int] ,
[IMAGE2] [nvarchar](30) ,
[IMAGE2_VERSION] [int] ,
[CO_ADDRESS1] [nvarchar](30) ,
[CO_ADDRESS1_VERSION] [int] ,
[CO_ADDRESS2] [nvarchar](30) ,
[CO_ADDRESS2_VERSION] [int] ,
[CO_ADDRESS3] [nvarchar](30) ,
[CO_ADDRESS3_VERSION] [int] ,
[LANG_STMT1] [nvarchar](30) ,
[LANG_STMT1_VERSION] [int] ,
[LANG_STMT2] [nvarchar](30) ,
[LANG_STMT2_VERSION] [int] ,
[LANG_STMT3] [nvarchar](30) ,
[LANG_STMT3_VERSION] [int] ,
[LANG_STMT4] [nvarchar](30) ,
[LANG_STMT4_VERSION] [int] ,
[LANG_STMT5] [nvarchar](30) ,
[LANG_STMT5_VERSION] [int] ,
[MAPSEC_ID] [uniqueidentifier] NOT NULL,
[MAPSEC_VERSION] [int] NOT NULL,
[MAPSEC_VERSION_Enabled] [bit] NOT NULL,
[MAPSEC_DES_USERID] [nvarchar](64) NOT NULL,
[MAPSEC_DES_USERNAME] [nvarchar](100) NOT NULL,
[MAPSEC_DES_MACHINE] [nvarchar](100) NOT NULL,
[MAPSEC_DES_TIMEDATE] [datetime] NOT NULL,
[MAPSEC_DES_COMMENT] [nvarchar](255) NOT NULL,
[MAPSEC_PEND_USERID] [nvarchar](64) ,
[MAPSEC_PEND_USERNAME] [nvarchar](100) ,
[MAPSEC_PEND_MACHINE] [nvarchar](100) ,
[MAPSEC_PEND_TIMEDATE] [datetime] ,
[MAPSEC_PEND_COMMENT] [nvarchar](255) ,
[MAPSEC_APPRV_USERID] [nvarchar](64) ,
[MAPSEC_APPRV_USERNAME] [nvarchar](100) ,
[MAPSEC_APPRV_MACHINE] [nvarchar](100) ,
[MAPSEC_APPRV_TIMEDATE] [datetime] ,
[MAPSEC_APPRV_COMMENT] [nvarchar](255) 
);
-- Primary Key
ALTER TABLE [CHINA_HISTORY]
ADD CONSTRAINT PK_CHINA_HISTORY PRIMARY KEY ([MAPSEC_ID], [MAPSEC_VERSION])
GO

-- Constraints
ALTER TABLE [CHINA_HISTORY] ADD CONSTRAINT CK_CHINA_HISTORY_0 CHECK ((COO IS NULL AND COO_VERSION IS NULL) OR (COO IS NOT NULL AND COO_VERSION IS NOT NULL))ALTER TABLE [CHINA_HISTORY] ADD CONSTRAINT CK_CHINA_HISTORY_1 CHECK ((SYMBOL_CE IS NULL AND SYMBOL_CE_VERSION IS NULL) OR (SYMBOL_CE IS NOT NULL AND SYMBOL_CE_VERSION IS NOT NULL))ALTER TABLE [CHINA_HISTORY] ADD CONSTRAINT CK_CHINA_HISTORY_2 CHECK ((SYMBOL_STERILE_MTHD IS NULL AND SYMBOL_STERILE_MTHD_VERSION IS NULL) OR (SYMBOL_STERILE_MTHD IS NOT NULL AND SYMBOL_STERILE_MTHD_VERSION IS NOT NULL))ALTER TABLE [CHINA_HISTORY] ADD CONSTRAINT CK_CHINA_HISTORY_3 CHECK ((SYMBOL_IFU IS NULL AND SYMBOL_IFU_VERSION IS NULL) OR (SYMBOL_IFU IS NOT NULL AND SYMBOL_IFU_VERSION IS NOT NULL))ALTER TABLE [CHINA_HISTORY] ADD CONSTRAINT CK_CHINA_HISTORY_4 CHECK ((SYMBOL_SINGLE_USE IS NULL AND SYMBOL_SINGLE_USE_VERSION IS NULL) OR (SYMBOL_SINGLE_USE IS NOT NULL AND SYMBOL_SINGLE_USE_VERSION IS NOT NULL))ALTER TABLE [CHINA_HISTORY] ADD CONSTRAINT CK_CHINA_HISTORY_5 CHECK ((SYMBOL_USER_DEF1 IS NULL AND SYMBOL_USER_DEF1_VERSION IS NULL) OR (SYMBOL_USER_DEF1 IS NOT NULL AND SYMBOL_USER_DEF1_VERSION IS NOT NULL))ALTER TABLE [CHINA_HISTORY] ADD CONSTRAINT CK_CHINA_HISTORY_6 CHECK ((SYMBOL_USER_DEF2 IS NULL AND SYMBOL_USER_DEF2_VERSION IS NULL) OR (SYMBOL_USER_DEF2 IS NOT NULL AND SYMBOL_USER_DEF2_VERSION IS NOT NULL))ALTER TABLE [CHINA_HISTORY] ADD CONSTRAINT CK_CHINA_HISTORY_7 CHECK ((SYMBOL_USER_DEF3 IS NULL AND SYMBOL_USER_DEF3_VERSION IS NULL) OR (SYMBOL_USER_DEF3 IS NOT NULL AND SYMBOL_USER_DEF3_VERSION IS NOT NULL))ALTER TABLE [CHINA_HISTORY] ADD CONSTRAINT CK_CHINA_HISTORY_8 CHECK ((SYMBOL_USER_DEF4 IS NULL AND SYMBOL_USER_DEF4_VERSION IS NULL) OR (SYMBOL_USER_DEF4 IS NOT NULL AND SYMBOL_USER_DEF4_VERSION IS NOT NULL))ALTER TABLE [CHINA_HISTORY] ADD CONSTRAINT CK_CHINA_HISTORY_9 CHECK ((SYMBOL_USER_DEF5 IS NULL AND SYMBOL_USER_DEF5_VERSION IS NULL) OR (SYMBOL_USER_DEF5 IS NOT NULL AND SYMBOL_USER_DEF5_VERSION IS NOT NULL))ALTER TABLE [CHINA_HISTORY] ADD CONSTRAINT CK_CHINA_HISTORY_10 CHECK ((IMAGE1 IS NULL AND IMAGE1_VERSION IS NULL) OR (IMAGE1 IS NOT NULL AND IMAGE1_VERSION IS NOT NULL))ALTER TABLE [CHINA_HISTORY] ADD CONSTRAINT CK_CHINA_HISTORY_11 CHECK ((IMAGE2 IS NULL AND IMAGE2_VERSION IS NULL) OR (IMAGE2 IS NOT NULL AND IMAGE2_VERSION IS NOT NULL))ALTER TABLE [CHINA_HISTORY] ADD CONSTRAINT CK_CHINA_HISTORY_12 CHECK ((CO_ADDRESS1 IS NULL AND CO_ADDRESS1_VERSION IS NULL) OR (CO_ADDRESS1 IS NOT NULL AND CO_ADDRESS1_VERSION IS NOT NULL))ALTER TABLE [CHINA_HISTORY] ADD CONSTRAINT CK_CHINA_HISTORY_13 CHECK ((CO_ADDRESS2 IS NULL AND CO_ADDRESS2_VERSION IS NULL) OR (CO_ADDRESS2 IS NOT NULL AND CO_ADDRESS2_VERSION IS NOT NULL))ALTER TABLE [CHINA_HISTORY] ADD CONSTRAINT CK_CHINA_HISTORY_14 CHECK ((CO_ADDRESS3 IS NULL AND CO_ADDRESS3_VERSION IS NULL) OR (CO_ADDRESS3 IS NOT NULL AND CO_ADDRESS3_VERSION IS NOT NULL))ALTER TABLE [CHINA_HISTORY] ADD CONSTRAINT CK_CHINA_HISTORY_15 CHECK ((LANG_STMT1 IS NULL AND LANG_STMT1_VERSION IS NULL) OR (LANG_STMT1 IS NOT NULL AND LANG_STMT1_VERSION IS NOT NULL))ALTER TABLE [CHINA_HISTORY] ADD CONSTRAINT CK_CHINA_HISTORY_16 CHECK ((LANG_STMT2 IS NULL AND LANG_STMT2_VERSION IS NULL) OR (LANG_STMT2 IS NOT NULL AND LANG_STMT2_VERSION IS NOT NULL))ALTER TABLE [CHINA_HISTORY] ADD CONSTRAINT CK_CHINA_HISTORY_17 CHECK ((LANG_STMT3 IS NULL AND LANG_STMT3_VERSION IS NULL) OR (LANG_STMT3 IS NOT NULL AND LANG_STMT3_VERSION IS NOT NULL))ALTER TABLE [CHINA_HISTORY] ADD CONSTRAINT CK_CHINA_HISTORY_18 CHECK ((LANG_STMT4 IS NULL AND LANG_STMT4_VERSION IS NULL) OR (LANG_STMT4 IS NOT NULL AND LANG_STMT4_VERSION IS NOT NULL))ALTER TABLE [CHINA_HISTORY] ADD CONSTRAINT CK_CHINA_HISTORY_19 CHECK ((LANG_STMT5 IS NULL AND LANG_STMT5_VERSION IS NULL) OR (LANG_STMT5 IS NOT NULL AND LANG_STMT5_VERSION IS NOT NULL))

-- Foreign Keys
ALTER TABLE [CHINA_HISTORY] ADD CONSTRAINT FK_CHINA_HISTORYCOUNTRY_HISTORY_0 FOREIGN KEY ([COO], [COO_VERSION]) REFERENCES [COUNTRY_HISTORY]([COUNTRY_ID], [MAPSEC_Version])  
GO
ALTER TABLE [CHINA_HISTORY] ADD CONSTRAINT FK_CHINA_HISTORYIMAGE_HISTORY_1 FOREIGN KEY ([SYMBOL_CE], [SYMBOL_CE_VERSION]) REFERENCES [IMAGE_HISTORY]([IMAGE_ID], [MAPSEC_Version])  
GO
ALTER TABLE [CHINA_HISTORY] ADD CONSTRAINT FK_CHINA_HISTORYIMAGE_HISTORY_2 FOREIGN KEY ([SYMBOL_STERILE_MTHD], [SYMBOL_STERILE_MTHD_VERSION]) REFERENCES [IMAGE_HISTORY]([IMAGE_ID], [MAPSEC_Version])  
GO
ALTER TABLE [CHINA_HISTORY] ADD CONSTRAINT FK_CHINA_HISTORYIMAGE_HISTORY_3 FOREIGN KEY ([SYMBOL_IFU], [SYMBOL_IFU_VERSION]) REFERENCES [IMAGE_HISTORY]([IMAGE_ID], [MAPSEC_Version])  
GO
ALTER TABLE [CHINA_HISTORY] ADD CONSTRAINT FK_CHINA_HISTORYIMAGE_HISTORY_4 FOREIGN KEY ([SYMBOL_SINGLE_USE], [SYMBOL_SINGLE_USE_VERSION]) REFERENCES [IMAGE_HISTORY]([IMAGE_ID], [MAPSEC_Version])  
GO
ALTER TABLE [CHINA_HISTORY] ADD CONSTRAINT FK_CHINA_HISTORYIMAGE_HISTORY_5 FOREIGN KEY ([SYMBOL_USER_DEF1], [SYMBOL_USER_DEF1_VERSION]) REFERENCES [IMAGE_HISTORY]([IMAGE_ID], [MAPSEC_Version])  
GO
ALTER TABLE [CHINA_HISTORY] ADD CONSTRAINT FK_CHINA_HISTORYIMAGE_HISTORY_6 FOREIGN KEY ([SYMBOL_USER_DEF2], [SYMBOL_USER_DEF2_VERSION]) REFERENCES [IMAGE_HISTORY]([IMAGE_ID], [MAPSEC_Version])  
GO
ALTER TABLE [CHINA_HISTORY] ADD CONSTRAINT FK_CHINA_HISTORYIMAGE_HISTORY_7 FOREIGN KEY ([SYMBOL_USER_DEF3], [SYMBOL_USER_DEF3_VERSION]) REFERENCES [IMAGE_HISTORY]([IMAGE_ID], [MAPSEC_Version])  
GO
ALTER TABLE [CHINA_HISTORY] ADD CONSTRAINT FK_CHINA_HISTORYIMAGE_HISTORY_8 FOREIGN KEY ([SYMBOL_USER_DEF4], [SYMBOL_USER_DEF4_VERSION]) REFERENCES [IMAGE_HISTORY]([IMAGE_ID], [MAPSEC_Version])  
GO
ALTER TABLE [CHINA_HISTORY] ADD CONSTRAINT FK_CHINA_HISTORYIMAGE_HISTORY_9 FOREIGN KEY ([SYMBOL_USER_DEF5], [SYMBOL_USER_DEF5_VERSION]) REFERENCES [IMAGE_HISTORY]([IMAGE_ID], [MAPSEC_Version])  
GO
ALTER TABLE [CHINA_HISTORY] ADD CONSTRAINT FK_CHINA_HISTORYIMAGE_HISTORY_10 FOREIGN KEY ([IMAGE1], [IMAGE1_VERSION]) REFERENCES [IMAGE_HISTORY]([IMAGE_ID], [MAPSEC_Version])  
GO
ALTER TABLE [CHINA_HISTORY] ADD CONSTRAINT FK_CHINA_HISTORYIMAGE_HISTORY_11 FOREIGN KEY ([IMAGE2], [IMAGE2_VERSION]) REFERENCES [IMAGE_HISTORY]([IMAGE_ID], [MAPSEC_Version])  
GO
ALTER TABLE [CHINA_HISTORY] ADD CONSTRAINT FK_CHINA_HISTORYSTATEMENT_HISTORY_12 FOREIGN KEY ([CO_ADDRESS1], [CO_ADDRESS1_VERSION]) REFERENCES [STATEMENT_HISTORY]([STATEMENT_ID], [MAPSEC_Version])  
GO
ALTER TABLE [CHINA_HISTORY] ADD CONSTRAINT FK_CHINA_HISTORYSTATEMENT_HISTORY_13 FOREIGN KEY ([CO_ADDRESS2], [CO_ADDRESS2_VERSION]) REFERENCES [STATEMENT_HISTORY]([STATEMENT_ID], [MAPSEC_Version])  
GO
ALTER TABLE [CHINA_HISTORY] ADD CONSTRAINT FK_CHINA_HISTORYSTATEMENT_HISTORY_14 FOREIGN KEY ([CO_ADDRESS3], [CO_ADDRESS3_VERSION]) REFERENCES [STATEMENT_HISTORY]([STATEMENT_ID], [MAPSEC_Version])  
GO
ALTER TABLE [CHINA_HISTORY] ADD CONSTRAINT FK_CHINA_HISTORYTRANSLATION_HISTORY_15 FOREIGN KEY ([LANG_STMT1], [LANG_STMT1_VERSION]) REFERENCES [TRANSLATION_HISTORY]([TRANSLATION_ID], [MAPSEC_Version])  
GO
ALTER TABLE [CHINA_HISTORY] ADD CONSTRAINT FK_CHINA_HISTORYTRANSLATION_HISTORY_16 FOREIGN KEY ([LANG_STMT2], [LANG_STMT2_VERSION]) REFERENCES [TRANSLATION_HISTORY]([TRANSLATION_ID], [MAPSEC_Version])  
GO
ALTER TABLE [CHINA_HISTORY] ADD CONSTRAINT FK_CHINA_HISTORYTRANSLATION_HISTORY_17 FOREIGN KEY ([LANG_STMT3], [LANG_STMT3_VERSION]) REFERENCES [TRANSLATION_HISTORY]([TRANSLATION_ID], [MAPSEC_Version])  
GO
ALTER TABLE [CHINA_HISTORY] ADD CONSTRAINT FK_CHINA_HISTORYTRANSLATION_HISTORY_18 FOREIGN KEY ([LANG_STMT4], [LANG_STMT4_VERSION]) REFERENCES [TRANSLATION_HISTORY]([TRANSLATION_ID], [MAPSEC_Version])  
GO
ALTER TABLE [CHINA_HISTORY] ADD CONSTRAINT FK_CHINA_HISTORYTRANSLATION_HISTORY_19 FOREIGN KEY ([LANG_STMT5], [LANG_STMT5_VERSION]) REFERENCES [TRANSLATION_HISTORY]([TRANSLATION_ID], [MAPSEC_Version])  
GO


CREATE UNIQUE INDEX IX_CHINA_HISTORY_0 ON CHINA_HISTORY (ITEM_NUMBER, MAPSEC_VERSION);
GO

ALTER TABLE CHINA_HISTORY ADD CONSTRAINT CK_IX_CHINA_HISTORY_0
 UNIQUE (ITEM_NUMBER, MAPSEC_VERSION)

GO

CREATE TABLE [CHINA_WORKING]
(
[MAPSEC_ID] [uniqueidentifier] NOT NULL,
[MAPSEC_LIVEVERSION] [int] ,
[MAPSEC_CURRENTVERSION] [int] ,
[MAPSEC_ENABLED] [bit] 
);
-- Primary Key
ALTER TABLE [CHINA_WORKING]
ADD CONSTRAINT PK_CHINA_WORKING PRIMARY KEY ([MAPSEC_ID])
GO

-- Constraints


-- Foreign Keys


CREATE INDEX IX_CHINA_WORKING_0 ON CHINA_WORKING (MAPSEC_ID, MAPSEC_LIVEVERSION);
GO

GO

CREATE INDEX IX_CHINA_WORKING_1 ON CHINA_WORKING (MAPSEC_ID, MAPSEC_CURRENTVERSION);
GO

GO

CREATE VIEW CHINA AS 
SELECT [CHINA_HISTORY].[ITEM_NUMBER],
[CHINA_HISTORY].[LABEL_SPEC_ID],
[CHINA_HISTORY].[FILTER_FIELD],
[CHINA_HISTORY].[EXTRA_LABELS],
[CHINA_HISTORY].[OT1],
[CHINA_HISTORY].[OT1_QTY],
[CHINA_HISTORY].[OT1_PKG_LVL],
[CHINA_HISTORY].[OT2],
[CHINA_HISTORY].[OT2_QTY],
[CHINA_HISTORY].[OT2_PKG_LVL],
[CHINA_HISTORY].[IN1],
[CHINA_HISTORY].[IN1_QTY],
[CHINA_HISTORY].[IN1_PKG_LVL],
[CHINA_HISTORY].[IN2],
[CHINA_HISTORY].[IN2_QTY],
[CHINA_HISTORY].[IN2_PKG_LVL],
[CHINA_HISTORY].[CS1],
[CHINA_HISTORY].[CS1_QTY],
[CHINA_HISTORY].[CS1_PKG_LVL],
[CHINA_HISTORY].[CS2],
[CHINA_HISTORY].[CS2_QTY],
[CHINA_HISTORY].[CS2_PKG_LVL],
[CHINA_HISTORY].[MS1],
[CHINA_HISTORY].[MS1_QTY],
[CHINA_HISTORY].[MS1_PKG_LVL],
[CHINA_HISTORY].[MS2],
[CHINA_HISTORY].[MS2_QTY],
[CHINA_HISTORY].[MS2_PKG_LVL],
[CHINA_HISTORY].[BATCH],
[CHINA_HISTORY].[EXP_DATE],
[CHINA_HISTORY].[REFERENCE_DESCRIPTION],
[CHINA_HISTORY].[STANDARD_NUMBER],
[CHINA_HISTORY].[CERTIFICATE_NUMBER],
[CHINA_HISTORY].[ARTICLE_NUMBER],
[CHINA_HISTORY].[BASE_UOM],
[CHINA_HISTORY].[SALES_UOM],
[CHINA_HISTORY].[SAP_PLANT],
[CHINA_HISTORY].[COMPANY_NAME],
[CHINA_HISTORY].[COO],
[CHINA_HISTORY].[COO_VERSION],
[CHINA_HISTORY].[GTIN1],
[CHINA_HISTORY].[GTIN1_UOM],
[CHINA_HISTORY].[GTIN2],
[CHINA_HISTORY].[GTIN2_UOM],
[CHINA_HISTORY].[GTIN3],
[CHINA_HISTORY].[GTIN3_UOM],
[CHINA_HISTORY].[HIBC_CNTRL_NUMBER],
[CHINA_HISTORY].[TRADE_NAME],
[CHINA_HISTORY].[MATERIAL],
[CHINA_HISTORY].[DES1],
[CHINA_HISTORY].[DES2],
[CHINA_HISTORY].[DES3],
[CHINA_HISTORY].[DES4],
[CHINA_HISTORY].[DES5],
[CHINA_HISTORY].[DES6],
[CHINA_HISTORY].[DES7],
[CHINA_HISTORY].[DIM1],
[CHINA_HISTORY].[DIM2],
[CHINA_HISTORY].[DIM3],
[CHINA_HISTORY].[DIM4],
[CHINA_HISTORY].[DIM5],
[CHINA_HISTORY].[DIM6],
[CHINA_HISTORY].[TEXT1],
[CHINA_HISTORY].[TEXT2],
[CHINA_HISTORY].[TEXT3],
[CHINA_HISTORY].[TEXT4],
[CHINA_HISTORY].[TEXT5],
[CHINA_HISTORY].[is serialized],
[CHINA_HISTORY].[CE_APPROVED],
[CHINA_HISTORY].[SYMBOL_CE],
[CHINA_HISTORY].[SYMBOL_CE_VERSION],
[CHINA_HISTORY].[SYMBOL_STERILE_MTHD],
[CHINA_HISTORY].[SYMBOL_STERILE_MTHD_VERSION],
[CHINA_HISTORY].[SHELF_LIFE],
[CHINA_HISTORY].[SHELF_LIFE_UOM],
[CHINA_HISTORY].[SYMBOL_IFU],
[CHINA_HISTORY].[SYMBOL_IFU_VERSION],
[CHINA_HISTORY].[SYMBOL_SINGLE_USE],
[CHINA_HISTORY].[SYMBOL_SINGLE_USE_VERSION],
[CHINA_HISTORY].[SYMBOL_USER_DEF1],
[CHINA_HISTORY].[SYMBOL_USER_DEF1_VERSION],
[CHINA_HISTORY].[SYMBOL_USER_DEF2],
[CHINA_HISTORY].[SYMBOL_USER_DEF2_VERSION],
[CHINA_HISTORY].[SYMBOL_USER_DEF3],
[CHINA_HISTORY].[SYMBOL_USER_DEF3_VERSION],
[CHINA_HISTORY].[SYMBOL_USER_DEF4],
[CHINA_HISTORY].[SYMBOL_USER_DEF4_VERSION],
[CHINA_HISTORY].[SYMBOL_USER_DEF5],
[CHINA_HISTORY].[SYMBOL_USER_DEF5_VERSION],
[CHINA_HISTORY].[IMAGE1],
[CHINA_HISTORY].[IMAGE1_VERSION],
[CHINA_HISTORY].[IMAGE2],
[CHINA_HISTORY].[IMAGE2_VERSION],
[CHINA_HISTORY].[CO_ADDRESS1],
[CHINA_HISTORY].[CO_ADDRESS1_VERSION],
[CHINA_HISTORY].[CO_ADDRESS2],
[CHINA_HISTORY].[CO_ADDRESS2_VERSION],
[CHINA_HISTORY].[CO_ADDRESS3],
[CHINA_HISTORY].[CO_ADDRESS3_VERSION],
[CHINA_HISTORY].[LANG_STMT1],
[CHINA_HISTORY].[LANG_STMT1_VERSION],
[CHINA_HISTORY].[LANG_STMT2],
[CHINA_HISTORY].[LANG_STMT2_VERSION],
[CHINA_HISTORY].[LANG_STMT3],
[CHINA_HISTORY].[LANG_STMT3_VERSION],
[CHINA_HISTORY].[LANG_STMT4],
[CHINA_HISTORY].[LANG_STMT4_VERSION],
[CHINA_HISTORY].[LANG_STMT5],
[CHINA_HISTORY].[LANG_STMT5_VERSION],
[CHINA_HISTORY].[MAPSEC_ID]
FROM CHINA_HISTORY JOIN CHINA_WORKING ON [CHINA_HISTORY].[MAPSEC_ID] = [CHINA_WORKING].[MAPSEC_ID] AND [CHINA_HISTORY].[MAPSEC_VERSION] = [CHINA_WORKING].[MAPSEC_LIVEVERSION]
WHERE [CHINA_WORKING].[MAPSEC_ENABLED] = 1;
GO

CREATE VIEW CHINA_CURRENT AS 
SELECT [CHINA_HISTORY].[ITEM_NUMBER],
[CHINA_HISTORY].[LABEL_SPEC_ID],
[CHINA_HISTORY].[FILTER_FIELD],
[CHINA_HISTORY].[EXTRA_LABELS],
[CHINA_HISTORY].[OT1],
[CHINA_HISTORY].[OT1_QTY],
[CHINA_HISTORY].[OT1_PKG_LVL],
[CHINA_HISTORY].[OT2],
[CHINA_HISTORY].[OT2_QTY],
[CHINA_HISTORY].[OT2_PKG_LVL],
[CHINA_HISTORY].[IN1],
[CHINA_HISTORY].[IN1_QTY],
[CHINA_HISTORY].[IN1_PKG_LVL],
[CHINA_HISTORY].[IN2],
[CHINA_HISTORY].[IN2_QTY],
[CHINA_HISTORY].[IN2_PKG_LVL],
[CHINA_HISTORY].[CS1],
[CHINA_HISTORY].[CS1_QTY],
[CHINA_HISTORY].[CS1_PKG_LVL],
[CHINA_HISTORY].[CS2],
[CHINA_HISTORY].[CS2_QTY],
[CHINA_HISTORY].[CS2_PKG_LVL],
[CHINA_HISTORY].[MS1],
[CHINA_HISTORY].[MS1_QTY],
[CHINA_HISTORY].[MS1_PKG_LVL],
[CHINA_HISTORY].[MS2],
[CHINA_HISTORY].[MS2_QTY],
[CHINA_HISTORY].[MS2_PKG_LVL],
[CHINA_HISTORY].[BATCH],
[CHINA_HISTORY].[EXP_DATE],
[CHINA_HISTORY].[REFERENCE_DESCRIPTION],
[CHINA_HISTORY].[STANDARD_NUMBER],
[CHINA_HISTORY].[CERTIFICATE_NUMBER],
[CHINA_HISTORY].[ARTICLE_NUMBER],
[CHINA_HISTORY].[BASE_UOM],
[CHINA_HISTORY].[SALES_UOM],
[CHINA_HISTORY].[SAP_PLANT],
[CHINA_HISTORY].[COMPANY_NAME],
[CHINA_HISTORY].[COO],
[CHINA_HISTORY].[COO_VERSION],
[CHINA_HISTORY].[GTIN1],
[CHINA_HISTORY].[GTIN1_UOM],
[CHINA_HISTORY].[GTIN2],
[CHINA_HISTORY].[GTIN2_UOM],
[CHINA_HISTORY].[GTIN3],
[CHINA_HISTORY].[GTIN3_UOM],
[CHINA_HISTORY].[HIBC_CNTRL_NUMBER],
[CHINA_HISTORY].[TRADE_NAME],
[CHINA_HISTORY].[MATERIAL],
[CHINA_HISTORY].[DES1],
[CHINA_HISTORY].[DES2],
[CHINA_HISTORY].[DES3],
[CHINA_HISTORY].[DES4],
[CHINA_HISTORY].[DES5],
[CHINA_HISTORY].[DES6],
[CHINA_HISTORY].[DES7],
[CHINA_HISTORY].[DIM1],
[CHINA_HISTORY].[DIM2],
[CHINA_HISTORY].[DIM3],
[CHINA_HISTORY].[DIM4],
[CHINA_HISTORY].[DIM5],
[CHINA_HISTORY].[DIM6],
[CHINA_HISTORY].[TEXT1],
[CHINA_HISTORY].[TEXT2],
[CHINA_HISTORY].[TEXT3],
[CHINA_HISTORY].[TEXT4],
[CHINA_HISTORY].[TEXT5],
[CHINA_HISTORY].[is serialized],
[CHINA_HISTORY].[CE_APPROVED],
[CHINA_HISTORY].[SYMBOL_CE],
[CHINA_HISTORY].[SYMBOL_CE_VERSION],
[CHINA_HISTORY].[SYMBOL_STERILE_MTHD],
[CHINA_HISTORY].[SYMBOL_STERILE_MTHD_VERSION],
[CHINA_HISTORY].[SHELF_LIFE],
[CHINA_HISTORY].[SHELF_LIFE_UOM],
[CHINA_HISTORY].[SYMBOL_IFU],
[CHINA_HISTORY].[SYMBOL_IFU_VERSION],
[CHINA_HISTORY].[SYMBOL_SINGLE_USE],
[CHINA_HISTORY].[SYMBOL_SINGLE_USE_VERSION],
[CHINA_HISTORY].[SYMBOL_USER_DEF1],
[CHINA_HISTORY].[SYMBOL_USER_DEF1_VERSION],
[CHINA_HISTORY].[SYMBOL_USER_DEF2],
[CHINA_HISTORY].[SYMBOL_USER_DEF2_VERSION],
[CHINA_HISTORY].[SYMBOL_USER_DEF3],
[CHINA_HISTORY].[SYMBOL_USER_DEF3_VERSION],
[CHINA_HISTORY].[SYMBOL_USER_DEF4],
[CHINA_HISTORY].[SYMBOL_USER_DEF4_VERSION],
[CHINA_HISTORY].[SYMBOL_USER_DEF5],
[CHINA_HISTORY].[SYMBOL_USER_DEF5_VERSION],
[CHINA_HISTORY].[IMAGE1],
[CHINA_HISTORY].[IMAGE1_VERSION],
[CHINA_HISTORY].[IMAGE2],
[CHINA_HISTORY].[IMAGE2_VERSION],
[CHINA_HISTORY].[CO_ADDRESS1],
[CHINA_HISTORY].[CO_ADDRESS1_VERSION],
[CHINA_HISTORY].[CO_ADDRESS2],
[CHINA_HISTORY].[CO_ADDRESS2_VERSION],
[CHINA_HISTORY].[CO_ADDRESS3],
[CHINA_HISTORY].[CO_ADDRESS3_VERSION],
[CHINA_HISTORY].[LANG_STMT1],
[CHINA_HISTORY].[LANG_STMT1_VERSION],
[CHINA_HISTORY].[LANG_STMT2],
[CHINA_HISTORY].[LANG_STMT2_VERSION],
[CHINA_HISTORY].[LANG_STMT3],
[CHINA_HISTORY].[LANG_STMT3_VERSION],
[CHINA_HISTORY].[LANG_STMT4],
[CHINA_HISTORY].[LANG_STMT4_VERSION],
[CHINA_HISTORY].[LANG_STMT5],
[CHINA_HISTORY].[LANG_STMT5_VERSION],
[CHINA_HISTORY].[MAPSEC_ID]
FROM CHINA_HISTORY JOIN CHINA_WORKING ON [CHINA_HISTORY].[MAPSEC_ID] = [CHINA_WORKING].[MAPSEC_ID] AND [CHINA_HISTORY].[MAPSEC_VERSION] = [CHINA_WORKING].[MAPSEC_CURRENTVERSION]
WHERE [CHINA_WORKING].[MAPSEC_ENABLED] = 1;
GO


-- ALL_COUNTRY
IF (EXISTS (SELECT * 
                 FROM INFORMATION_SCHEMA.TABLES 
                 WHERE TABLE_NAME = 'ALL_COUNTRY_HISTORY'))
BEGIN
    DROP TABLE ALL_COUNTRY_HISTORY;
END
GO

IF (EXISTS (SELECT * 
                 FROM INFORMATION_SCHEMA.TABLES 
                 WHERE TABLE_NAME = 'ALL_COUNTRY_WORKING'))
BEGIN
    DROP TABLE ALL_COUNTRY_WORKING;
END
GO

IF (EXISTS (SELECT * 
                 FROM INFORMATION_SCHEMA.VIEWS
                 WHERE TABLE_NAME = 'ALL_COUNTRY'))
BEGIN
    DROP VIEW ALL_COUNTRY;
END
GO

IF (EXISTS (SELECT * 
                 FROM INFORMATION_SCHEMA.VIEWS
                 WHERE TABLE_NAME = 'ALL_COUNTRY_CURRENT'))
BEGIN
    DROP VIEW ALL_COUNTRY_CURRENT;
END
GO

CREATE TABLE [ALL_COUNTRY_HISTORY]
(
[ITEM_NUMBER] [nvarchar](30) NOT NULL,
[STANDARD_NUMBER] [nvarchar](30) ,
[CERT_NUMBER] [nvarchar](30) ,
[CERT_ADDRESS] [nvarchar](50) ,
[CONTACT] [nvarchar](50) ,
[COMPANY_NAME] [nvarchar](50) ,
[SYMBOL_MFG_DIST] [nvarchar](30) ,
[SYMBOL_MFG_DIST_VERSION] [int] ,
[MFG_ADDRESS] [nvarchar](50) ,
[DIST_ADDRESS] [nvarchar](50) ,
[IMAGE1] [nvarchar](30) ,
[IMAGE1_VERSION] [int] ,
[ARTICLE_NUMBER] [nvarchar](50) ,
[BATCH] [nvarchar](50) ,
[MATERIAL] [nvarchar](50) ,
[UOM] [nvarchar](50) ,
[STERILIZATION] [nvarchar](50) ,
[EXP_DATE] [datetime] ,
[DESCRIPTION1] [nvarchar](50) ,
[SYMBOL1] [nvarchar](30) ,
[SYMBOL1_VERSION] [int] ,
[SYMBOL2] [nvarchar](30) ,
[SYMBOL2_VERSION] [int] ,
[SYMBOL3] [nvarchar](30) ,
[SYMBOL3_VERSION] [int] ,
[SYMBOL4] [nvarchar](30) ,
[SYMBOL4_VERSION] [int] ,
[SYMBOL5] [nvarchar](30) ,
[SYMBOL5_VERSION] [int] ,
[HIBC_CONTROL_NUMBER] [nvarchar](50) ,
[DESCRIPTION_TRANSLATION] [nvarchar](50) ,
[PRODUCT_NAME] [nvarchar](50) ,
[SIZE] [nvarchar](50) ,
[DESCRIPTION2] [nvarchar](50) ,
[DESCRIPTION3] [nvarchar](50) ,
[CLASSIFICATION] [nvarchar](50) ,
[COMPONENT_NAME] [nvarchar](50) ,
[JMDN_CODE] [nvarchar](50) ,
[SYMBOL_SNLOGO] [nvarchar](30) ,
[SYMBOL_SNLOGO_VERSION] [int] ,
[SYMBOL_DISTLOGO] [nvarchar](30) ,
[SYMBOL_DISTLOGO_VERSION] [int] ,
[IFU] [nvarchar](50) ,
[LBL_LEGENDS] [nvarchar](50) ,
[CUSTOM] [nvarchar](50) ,
[MISC_DATE] [nvarchar](50) ,
[IMPORT_PETITION] [nvarchar](50) ,
[USAGE_PURPOSE] [nvarchar](50) ,
[STORAGE_COND] [nvarchar](50) ,
[IMPORT_AUTH_NUMBER] [nvarchar](50) ,
[LABEL_REV] [nvarchar](50) ,
[CE_MARK] [nvarchar](50) ,
[DOM] [nvarchar](50) ,
[GTIN] [nvarchar](50) ,
[TEXT1] [nvarchar](50) ,
[TEXT2] [nvarchar](50) ,
[TEXT3] [nvarchar](50) ,
[TEXT4] [nvarchar](50) ,
[TEXT5] [nvarchar](50) ,
[BARCODE] [nvarchar](50) ,
[MAPSEC_ID] [uniqueidentifier] NOT NULL,
[MAPSEC_VERSION] [int] NOT NULL,
[MAPSEC_VERSION_Enabled] [bit] NOT NULL,
[MAPSEC_DES_USERID] [nvarchar](64) NOT NULL,
[MAPSEC_DES_USERNAME] [nvarchar](100) NOT NULL,
[MAPSEC_DES_MACHINE] [nvarchar](100) NOT NULL,
[MAPSEC_DES_TIMEDATE] [datetime] NOT NULL,
[MAPSEC_DES_COMMENT] [nvarchar](255) NOT NULL,
[MAPSEC_PEND_USERID] [nvarchar](64) ,
[MAPSEC_PEND_USERNAME] [nvarchar](100) ,
[MAPSEC_PEND_MACHINE] [nvarchar](100) ,
[MAPSEC_PEND_TIMEDATE] [datetime] ,
[MAPSEC_PEND_COMMENT] [nvarchar](255) ,
[MAPSEC_APPRV_USERID] [nvarchar](64) ,
[MAPSEC_APPRV_USERNAME] [nvarchar](100) ,
[MAPSEC_APPRV_MACHINE] [nvarchar](100) ,
[MAPSEC_APPRV_TIMEDATE] [datetime] ,
[MAPSEC_APPRV_COMMENT] [nvarchar](255) 
);
-- Primary Key
ALTER TABLE [ALL_COUNTRY_HISTORY]
ADD CONSTRAINT PK_ALL_COUNTRY_HISTORY PRIMARY KEY ([MAPSEC_ID], [MAPSEC_VERSION])
GO

-- Constraints
ALTER TABLE [ALL_COUNTRY_HISTORY] ADD CONSTRAINT CK_ALL_COUNTRY_HISTORY_0 CHECK ((SYMBOL_MFG_DIST IS NULL AND SYMBOL_MFG_DIST_VERSION IS NULL) OR (SYMBOL_MFG_DIST IS NOT NULL AND SYMBOL_MFG_DIST_VERSION IS NOT NULL))ALTER TABLE [ALL_COUNTRY_HISTORY] ADD CONSTRAINT CK_ALL_COUNTRY_HISTORY_1 CHECK ((IMAGE1 IS NULL AND IMAGE1_VERSION IS NULL) OR (IMAGE1 IS NOT NULL AND IMAGE1_VERSION IS NOT NULL))ALTER TABLE [ALL_COUNTRY_HISTORY] ADD CONSTRAINT CK_ALL_COUNTRY_HISTORY_2 CHECK ((SYMBOL1 IS NULL AND SYMBOL1_VERSION IS NULL) OR (SYMBOL1 IS NOT NULL AND SYMBOL1_VERSION IS NOT NULL))ALTER TABLE [ALL_COUNTRY_HISTORY] ADD CONSTRAINT CK_ALL_COUNTRY_HISTORY_3 CHECK ((SYMBOL2 IS NULL AND SYMBOL2_VERSION IS NULL) OR (SYMBOL2 IS NOT NULL AND SYMBOL2_VERSION IS NOT NULL))ALTER TABLE [ALL_COUNTRY_HISTORY] ADD CONSTRAINT CK_ALL_COUNTRY_HISTORY_4 CHECK ((SYMBOL3 IS NULL AND SYMBOL3_VERSION IS NULL) OR (SYMBOL3 IS NOT NULL AND SYMBOL3_VERSION IS NOT NULL))ALTER TABLE [ALL_COUNTRY_HISTORY] ADD CONSTRAINT CK_ALL_COUNTRY_HISTORY_5 CHECK ((SYMBOL4 IS NULL AND SYMBOL4_VERSION IS NULL) OR (SYMBOL4 IS NOT NULL AND SYMBOL4_VERSION IS NOT NULL))ALTER TABLE [ALL_COUNTRY_HISTORY] ADD CONSTRAINT CK_ALL_COUNTRY_HISTORY_6 CHECK ((SYMBOL5 IS NULL AND SYMBOL5_VERSION IS NULL) OR (SYMBOL5 IS NOT NULL AND SYMBOL5_VERSION IS NOT NULL))ALTER TABLE [ALL_COUNTRY_HISTORY] ADD CONSTRAINT CK_ALL_COUNTRY_HISTORY_7 CHECK ((SYMBOL_SNLOGO IS NULL AND SYMBOL_SNLOGO_VERSION IS NULL) OR (SYMBOL_SNLOGO IS NOT NULL AND SYMBOL_SNLOGO_VERSION IS NOT NULL))ALTER TABLE [ALL_COUNTRY_HISTORY] ADD CONSTRAINT CK_ALL_COUNTRY_HISTORY_8 CHECK ((SYMBOL_DISTLOGO IS NULL AND SYMBOL_DISTLOGO_VERSION IS NULL) OR (SYMBOL_DISTLOGO IS NOT NULL AND SYMBOL_DISTLOGO_VERSION IS NOT NULL))

-- Foreign Keys
ALTER TABLE [ALL_COUNTRY_HISTORY] ADD CONSTRAINT FK_ALL_COUNTRY_HISTORYIMAGE_HISTORY_0 FOREIGN KEY ([SYMBOL_MFG_DIST], [SYMBOL_MFG_DIST_VERSION]) REFERENCES [IMAGE_HISTORY]([IMAGE_ID], [MAPSEC_Version])  
GO
ALTER TABLE [ALL_COUNTRY_HISTORY] ADD CONSTRAINT FK_ALL_COUNTRY_HISTORYIMAGE_HISTORY_1 FOREIGN KEY ([IMAGE1], [IMAGE1_VERSION]) REFERENCES [IMAGE_HISTORY]([IMAGE_ID], [MAPSEC_Version])  
GO
ALTER TABLE [ALL_COUNTRY_HISTORY] ADD CONSTRAINT FK_ALL_COUNTRY_HISTORYIMAGE_HISTORY_2 FOREIGN KEY ([SYMBOL1], [SYMBOL1_VERSION]) REFERENCES [IMAGE_HISTORY]([IMAGE_ID], [MAPSEC_Version])  
GO
ALTER TABLE [ALL_COUNTRY_HISTORY] ADD CONSTRAINT FK_ALL_COUNTRY_HISTORYIMAGE_HISTORY_3 FOREIGN KEY ([SYMBOL2], [SYMBOL2_VERSION]) REFERENCES [IMAGE_HISTORY]([IMAGE_ID], [MAPSEC_Version])  
GO
ALTER TABLE [ALL_COUNTRY_HISTORY] ADD CONSTRAINT FK_ALL_COUNTRY_HISTORYIMAGE_HISTORY_4 FOREIGN KEY ([SYMBOL3], [SYMBOL3_VERSION]) REFERENCES [IMAGE_HISTORY]([IMAGE_ID], [MAPSEC_Version])  
GO
ALTER TABLE [ALL_COUNTRY_HISTORY] ADD CONSTRAINT FK_ALL_COUNTRY_HISTORYIMAGE_HISTORY_5 FOREIGN KEY ([SYMBOL4], [SYMBOL4_VERSION]) REFERENCES [IMAGE_HISTORY]([IMAGE_ID], [MAPSEC_Version])  
GO
ALTER TABLE [ALL_COUNTRY_HISTORY] ADD CONSTRAINT FK_ALL_COUNTRY_HISTORYIMAGE_HISTORY_6 FOREIGN KEY ([SYMBOL5], [SYMBOL5_VERSION]) REFERENCES [IMAGE_HISTORY]([IMAGE_ID], [MAPSEC_Version])  
GO
ALTER TABLE [ALL_COUNTRY_HISTORY] ADD CONSTRAINT FK_ALL_COUNTRY_HISTORYIMAGE_HISTORY_7 FOREIGN KEY ([SYMBOL_SNLOGO], [SYMBOL_SNLOGO_VERSION]) REFERENCES [IMAGE_HISTORY]([IMAGE_ID], [MAPSEC_Version])  
GO
ALTER TABLE [ALL_COUNTRY_HISTORY] ADD CONSTRAINT FK_ALL_COUNTRY_HISTORYIMAGE_HISTORY_8 FOREIGN KEY ([SYMBOL_DISTLOGO], [SYMBOL_DISTLOGO_VERSION]) REFERENCES [IMAGE_HISTORY]([IMAGE_ID], [MAPSEC_Version])  
GO


CREATE UNIQUE INDEX IX_ALL_COUNTRY_HISTORY_0 ON ALL_COUNTRY_HISTORY (ITEM_NUMBER, MAPSEC_VERSION);
GO

ALTER TABLE ALL_COUNTRY_HISTORY ADD CONSTRAINT CK_IX_ALL_COUNTRY_HISTORY_0
 UNIQUE (ITEM_NUMBER, MAPSEC_VERSION)

GO

CREATE TABLE [ALL_COUNTRY_WORKING]
(
[MAPSEC_ID] [uniqueidentifier] NOT NULL,
[MAPSEC_LIVEVERSION] [int] ,
[MAPSEC_CURRENTVERSION] [int] ,
[MAPSEC_ENABLED] [bit] 
);
-- Primary Key
ALTER TABLE [ALL_COUNTRY_WORKING]
ADD CONSTRAINT PK_ALL_COUNTRY_WORKING PRIMARY KEY ([MAPSEC_ID])
GO

-- Constraints


-- Foreign Keys


CREATE INDEX IX_ALL_COUNTRY_WORKING_0 ON ALL_COUNTRY_WORKING (MAPSEC_ID, MAPSEC_LIVEVERSION);
GO

GO

CREATE INDEX IX_ALL_COUNTRY_WORKING_1 ON ALL_COUNTRY_WORKING (MAPSEC_ID, MAPSEC_CURRENTVERSION);
GO

GO

CREATE VIEW ALL_COUNTRY AS 
SELECT [ALL_COUNTRY_HISTORY].[ITEM_NUMBER],
[ALL_COUNTRY_HISTORY].[STANDARD_NUMBER],
[ALL_COUNTRY_HISTORY].[CERT_NUMBER],
[ALL_COUNTRY_HISTORY].[CERT_ADDRESS],
[ALL_COUNTRY_HISTORY].[CONTACT],
[ALL_COUNTRY_HISTORY].[COMPANY_NAME],
[ALL_COUNTRY_HISTORY].[SYMBOL_MFG_DIST],
[ALL_COUNTRY_HISTORY].[SYMBOL_MFG_DIST_VERSION],
[ALL_COUNTRY_HISTORY].[MFG_ADDRESS],
[ALL_COUNTRY_HISTORY].[DIST_ADDRESS],
[ALL_COUNTRY_HISTORY].[IMAGE1],
[ALL_COUNTRY_HISTORY].[IMAGE1_VERSION],
[ALL_COUNTRY_HISTORY].[ARTICLE_NUMBER],
[ALL_COUNTRY_HISTORY].[BATCH],
[ALL_COUNTRY_HISTORY].[MATERIAL],
[ALL_COUNTRY_HISTORY].[UOM],
[ALL_COUNTRY_HISTORY].[STERILIZATION],
[ALL_COUNTRY_HISTORY].[EXP_DATE],
[ALL_COUNTRY_HISTORY].[DESCRIPTION1],
[ALL_COUNTRY_HISTORY].[SYMBOL1],
[ALL_COUNTRY_HISTORY].[SYMBOL1_VERSION],
[ALL_COUNTRY_HISTORY].[SYMBOL2],
[ALL_COUNTRY_HISTORY].[SYMBOL2_VERSION],
[ALL_COUNTRY_HISTORY].[SYMBOL3],
[ALL_COUNTRY_HISTORY].[SYMBOL3_VERSION],
[ALL_COUNTRY_HISTORY].[SYMBOL4],
[ALL_COUNTRY_HISTORY].[SYMBOL4_VERSION],
[ALL_COUNTRY_HISTORY].[SYMBOL5],
[ALL_COUNTRY_HISTORY].[SYMBOL5_VERSION],
[ALL_COUNTRY_HISTORY].[HIBC_CONTROL_NUMBER],
[ALL_COUNTRY_HISTORY].[DESCRIPTION_TRANSLATION],
[ALL_COUNTRY_HISTORY].[PRODUCT_NAME],
[ALL_COUNTRY_HISTORY].[SIZE],
[ALL_COUNTRY_HISTORY].[DESCRIPTION2],
[ALL_COUNTRY_HISTORY].[DESCRIPTION3],
[ALL_COUNTRY_HISTORY].[CLASSIFICATION],
[ALL_COUNTRY_HISTORY].[COMPONENT_NAME],
[ALL_COUNTRY_HISTORY].[JMDN_CODE],
[ALL_COUNTRY_HISTORY].[SYMBOL_SNLOGO],
[ALL_COUNTRY_HISTORY].[SYMBOL_SNLOGO_VERSION],
[ALL_COUNTRY_HISTORY].[SYMBOL_DISTLOGO],
[ALL_COUNTRY_HISTORY].[SYMBOL_DISTLOGO_VERSION],
[ALL_COUNTRY_HISTORY].[IFU],
[ALL_COUNTRY_HISTORY].[LBL_LEGENDS],
[ALL_COUNTRY_HISTORY].[CUSTOM],
[ALL_COUNTRY_HISTORY].[MISC_DATE],
[ALL_COUNTRY_HISTORY].[IMPORT_PETITION],
[ALL_COUNTRY_HISTORY].[USAGE_PURPOSE],
[ALL_COUNTRY_HISTORY].[STORAGE_COND],
[ALL_COUNTRY_HISTORY].[IMPORT_AUTH_NUMBER],
[ALL_COUNTRY_HISTORY].[LABEL_REV],
[ALL_COUNTRY_HISTORY].[CE_MARK],
[ALL_COUNTRY_HISTORY].[DOM],
[ALL_COUNTRY_HISTORY].[GTIN],
[ALL_COUNTRY_HISTORY].[TEXT1],
[ALL_COUNTRY_HISTORY].[TEXT2],
[ALL_COUNTRY_HISTORY].[TEXT3],
[ALL_COUNTRY_HISTORY].[TEXT4],
[ALL_COUNTRY_HISTORY].[TEXT5],
[ALL_COUNTRY_HISTORY].[BARCODE],
[ALL_COUNTRY_HISTORY].[MAPSEC_ID]
FROM ALL_COUNTRY_HISTORY JOIN ALL_COUNTRY_WORKING ON [ALL_COUNTRY_HISTORY].[MAPSEC_ID] = [ALL_COUNTRY_WORKING].[MAPSEC_ID] AND [ALL_COUNTRY_HISTORY].[MAPSEC_VERSION] = [ALL_COUNTRY_WORKING].[MAPSEC_LIVEVERSION]
WHERE [ALL_COUNTRY_WORKING].[MAPSEC_ENABLED] = 1;
GO

CREATE VIEW ALL_COUNTRY_CURRENT AS 
SELECT [ALL_COUNTRY_HISTORY].[ITEM_NUMBER],
[ALL_COUNTRY_HISTORY].[STANDARD_NUMBER],
[ALL_COUNTRY_HISTORY].[CERT_NUMBER],
[ALL_COUNTRY_HISTORY].[CERT_ADDRESS],
[ALL_COUNTRY_HISTORY].[CONTACT],
[ALL_COUNTRY_HISTORY].[COMPANY_NAME],
[ALL_COUNTRY_HISTORY].[SYMBOL_MFG_DIST],
[ALL_COUNTRY_HISTORY].[SYMBOL_MFG_DIST_VERSION],
[ALL_COUNTRY_HISTORY].[MFG_ADDRESS],
[ALL_COUNTRY_HISTORY].[DIST_ADDRESS],
[ALL_COUNTRY_HISTORY].[IMAGE1],
[ALL_COUNTRY_HISTORY].[IMAGE1_VERSION],
[ALL_COUNTRY_HISTORY].[ARTICLE_NUMBER],
[ALL_COUNTRY_HISTORY].[BATCH],
[ALL_COUNTRY_HISTORY].[MATERIAL],
[ALL_COUNTRY_HISTORY].[UOM],
[ALL_COUNTRY_HISTORY].[STERILIZATION],
[ALL_COUNTRY_HISTORY].[EXP_DATE],
[ALL_COUNTRY_HISTORY].[DESCRIPTION1],
[ALL_COUNTRY_HISTORY].[SYMBOL1],
[ALL_COUNTRY_HISTORY].[SYMBOL1_VERSION],
[ALL_COUNTRY_HISTORY].[SYMBOL2],
[ALL_COUNTRY_HISTORY].[SYMBOL2_VERSION],
[ALL_COUNTRY_HISTORY].[SYMBOL3],
[ALL_COUNTRY_HISTORY].[SYMBOL3_VERSION],
[ALL_COUNTRY_HISTORY].[SYMBOL4],
[ALL_COUNTRY_HISTORY].[SYMBOL4_VERSION],
[ALL_COUNTRY_HISTORY].[SYMBOL5],
[ALL_COUNTRY_HISTORY].[SYMBOL5_VERSION],
[ALL_COUNTRY_HISTORY].[HIBC_CONTROL_NUMBER],
[ALL_COUNTRY_HISTORY].[DESCRIPTION_TRANSLATION],
[ALL_COUNTRY_HISTORY].[PRODUCT_NAME],
[ALL_COUNTRY_HISTORY].[SIZE],
[ALL_COUNTRY_HISTORY].[DESCRIPTION2],
[ALL_COUNTRY_HISTORY].[DESCRIPTION3],
[ALL_COUNTRY_HISTORY].[CLASSIFICATION],
[ALL_COUNTRY_HISTORY].[COMPONENT_NAME],
[ALL_COUNTRY_HISTORY].[JMDN_CODE],
[ALL_COUNTRY_HISTORY].[SYMBOL_SNLOGO],
[ALL_COUNTRY_HISTORY].[SYMBOL_SNLOGO_VERSION],
[ALL_COUNTRY_HISTORY].[SYMBOL_DISTLOGO],
[ALL_COUNTRY_HISTORY].[SYMBOL_DISTLOGO_VERSION],
[ALL_COUNTRY_HISTORY].[IFU],
[ALL_COUNTRY_HISTORY].[LBL_LEGENDS],
[ALL_COUNTRY_HISTORY].[CUSTOM],
[ALL_COUNTRY_HISTORY].[MISC_DATE],
[ALL_COUNTRY_HISTORY].[IMPORT_PETITION],
[ALL_COUNTRY_HISTORY].[USAGE_PURPOSE],
[ALL_COUNTRY_HISTORY].[STORAGE_COND],
[ALL_COUNTRY_HISTORY].[IMPORT_AUTH_NUMBER],
[ALL_COUNTRY_HISTORY].[LABEL_REV],
[ALL_COUNTRY_HISTORY].[CE_MARK],
[ALL_COUNTRY_HISTORY].[DOM],
[ALL_COUNTRY_HISTORY].[GTIN],
[ALL_COUNTRY_HISTORY].[TEXT1],
[ALL_COUNTRY_HISTORY].[TEXT2],
[ALL_COUNTRY_HISTORY].[TEXT3],
[ALL_COUNTRY_HISTORY].[TEXT4],
[ALL_COUNTRY_HISTORY].[TEXT5],
[ALL_COUNTRY_HISTORY].[BARCODE],
[ALL_COUNTRY_HISTORY].[MAPSEC_ID]
FROM ALL_COUNTRY_HISTORY JOIN ALL_COUNTRY_WORKING ON [ALL_COUNTRY_HISTORY].[MAPSEC_ID] = [ALL_COUNTRY_WORKING].[MAPSEC_ID] AND [ALL_COUNTRY_HISTORY].[MAPSEC_VERSION] = [ALL_COUNTRY_WORKING].[MAPSEC_CURRENTVERSION]
WHERE [ALL_COUNTRY_WORKING].[MAPSEC_ENABLED] = 1;
GO

